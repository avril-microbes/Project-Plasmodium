labs(color = "Co-infection\nhigh-performing cues", x = "Total iRBC per \u03bcL", y = "RBC per \u03bcL") +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE, accuracy = 0.1)) +
guides(shape = FALSE)
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"))
ggsave(here("figures/report21/disease_curve.png"), width = 10, height = 6)
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggsave(here("figures/report21/opt_cue_final.png"))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 3))
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 3))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12)
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 9)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 2.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8.5)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 2))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggsave(here("figures/report21/opt_cue_final.png"), width = 14, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom") +
guides(shape = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom") +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 3),
legend.text = element_text(size = 3)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.1, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.7, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(1, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.9, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.5)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.5)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
ggsave(here("figures/report21/opt_cue_final.png"), width = 13, height = 8.2)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 6.5),
legend.text = element_text(size = 6.5)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 13, height = 8.2)
# import in dataset
static.df <- read.csv(here("data/ci_static.csv"))
static.df
ez_label
static.df
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci_1"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# reorder the cues and get proper labels
ez_label <- cbind.data.frame(
id_ci = c("I-i_none", "I-i_log",
"I1+I2_none", "I1+I2_log",
"Ig-i_none", "Ig-i_log",
"I+Ig_none", "I+Ig_log",
"sum_none", "sum_log",
"G-i_none", "G-i_log",
"G1+G2_none", "Ig1+Ig2_none",
"R_none", "R_log"),
id_si = c("I_none", "I_log",
"I_none", "I_log",
"Ig_none", "Ig_log",
"I+Ig_none", "I+Ig_log",
"I+Ig_none", "I+Ig_log",
"G_none", "G_log",
"G_none", "Ig_none",
"R_none", "R_log"),
label_ci = c("I", "I log",
"I1+I2", "I1+I2 log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"sum", "sum log",
"G", "G log",
"G1+G2", "Ig1+Ig2",
"R", "R log"),
label_si = c("I", "I log",
"I", "I log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"I+Ig", "I+Ig log",
"G", "G log",
"G", "Ig",
"R", "R log"),
ez_label = c("Asexual iRBC", "Asexual iRBC log10",
"Total asexual iRBC", "Total asexual\niRBC log10",
"Sexual iRBC", "Sexual iRBC log10",
"Asexual&sexual iRBC", "Asexual&sexual\niRBC log10",
"Total iRBC", "Total iRBC log10",
"Gametocyte", "Gametocyte log10",
"Total gametocyte", "Total sexual iRBC",
"RBC", "RBC log10")
)
write.csv(ez_label, here("data/ez_label.csv"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# reorder the cues and get proper labels
ez_label <- cbind.data.frame(
id_ci = c("I-i_none", "I-i_log",
"I1+I2_none", "I1+I2_log",
"Ig-i_none", "Ig-i_log",
"I-i+Ig-i_none", "I-i+Ig-i_log",
"sum_none", "sum_log",
"G-i_none", "G-i_log",
"G1+G2_none", "Ig1+Ig2_none",
"R_none", "R_log"),
id_si = c("I_none", "I_log",
"I_none", "I_log",
"Ig_none", "Ig_log",
"I+Ig_none", "I+Ig_log",
"I+Ig_none", "I+Ig_log",
"G_none", "G_log",
"G_none", "Ig_none",
"R_none", "R_log"),
label_ci = c("I", "I log",
"I1+I2", "I1+I2 log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"sum", "sum log",
"G", "G log",
"G1+G2", "Ig1+Ig2",
"R", "R log"),
label_si = c("I", "I log",
"I", "I log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"I+Ig", "I+Ig log",
"G", "G log",
"G", "Ig",
"R", "R log"),
ez_label = c("Asexual iRBC", "Asexual iRBC log10",
"Total asexual iRBC", "Total asexual\niRBC log10",
"Sexual iRBC", "Sexual iRBC log10",
"Asexual&sexual iRBC", "Asexual&sexual\niRBC log10",
"Total iRBC", "Total iRBC log10",
"Gametocyte", "Gametocyte log10",
"Total gametocyte", "Total sexual iRBC",
"RBC", "RBC log10")
)
write.csv(ez_label, here("data/ez_label.csv"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci"))
# join with labelling
static.df2 <- static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci"))
# get reverse order, which is simply invovles switching the cues around the multiplying the fitness by negative 1
static.df2
# join with labelling
static.df2 <- static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci")) %>%
mutate(fitness_diff = fitness_1 - fitness_2) %>%
select(label_ci_1, label_ci_2, fitness_diff)
# get reverse order, which is simply invovles switching the cues around the multiplying the fitness by negative 1
static.df3 <- static.df2
static.df3
names(static.df3) <- c("label_ci_2", "label_ci_1", "fitness_diff")
static.df3$fitness_diff <- static.df2$fitness_diff * -1
static.df3
# join
static.df4 <- rbind(static.df2, static.df3)
static.df4
library(dplyr)
library(ggplot2)
library(here)
library(deSolve)
library(crone)
library(optimParallel)
library(doParallel)
library(doRNG)
library(arrow)
library(stringr)
library(parallel)
library(ggpubr)
library(psoptim)
library(Rmpi)
source(here("functions/chabaudi_si_clean.R"))
# importing in test function that contains full main effect interation
source(here("functions/test.R"))
# list of values to expand bounds on
bounds <- c(-50000, -10000, -5000, -1000, -500, -100, -10, -1, 1, 100, 1000, 500, 5000, 10000, 50000)
# list of values to expand bounds on
bounds <- c(-50000, -10000, -5000, -1000, -500, -100, -10, -1, 1, 100, 1000, 500, 5000, 10000, 50000)
bounds.df <- expand.grid(par = bounds, index = seq(1,9,1))
# cycle to get all combinations of 5 parameters with these substituted in
par.ls <- lapply(split(bounds.df, seq(nrow(bounds.df))), function(x){
# default pardameter list with 5x0.5
par <- rep(0.5, 9)
#A substitute in the bounds
par[[x$index]] <- x$par
return(data.frame(
par1 = par[[1]],
par2 = par[[2]],
par3 = par[[3]],
par4 = par[[4]],
par5 = par[[5]],
par6 = par[[6]],
par7 = par[[7]],
par8 = par[[8]],
par9 = par[[9]],
id = paste0(x$index, "_", x$par)))
})
par.df <- do.call(rbind, par.ls)
# make graphs
source(here("functions/par_to_hm_te.R"))
# get heatmap dataframe for all par
par_res.ls <- mclapply(par.ls,
function(x){
res <- par_to_hm_te(par = c(x$par1, x$par2, x$par3, x$par4, x$par5, x$par6, x$par7, x$par8, x$par9),
cue_range = seq(1, 100, 1),
cue_range_b = seq(1, 100, 1))
res2 <- cbind(id = x$id, res)
return(res2)
}
)
par_res.df <- do.call(rbind, par_res.ls)
# divide into 5 parameters
par_res.df1 <- par_res.df %>% filter(str_detect(id, "1_"))
par_res.df2 <- par_res.df %>% filter(str_detect(id, "2_"))
par_res.df3 <- par_res.df %>% filter(str_detect(id, "3_"))
par_res.df4 <- par_res.df %>% filter(str_detect(id, "4_"))
par_res.df5 <- par_res.df %>% filter(str_detect(id, "5_"))
par_res.df6 <- par_res.df %>% filter(str_detect(id, "6_"))
par_res.df7 <- par_res.df %>% filter(str_detect(id, "7_"))
par_res.df8 <- par_res.df %>% filter(str_detect(id, "8_"))
par_res.df9 <- par_res.df %>% filter(str_detect(id, "9_"))
# par 1. -1 and 1 is sufficient
ggplot() +
geom_raster(data = par_res.df1, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
# par2. -500 and 500 is sufficient
ggplot() +
geom_raster(data = par_res.df2, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
# par 3 -500 and 500 is sufficient
ggplot() +
geom_raster(data = par_res.df3, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
# par 4 -500 and 500 is sufficient
ggplot() +
geom_raster(data = par_res.df4, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
# par 5. -500 and 500 is sufficient
ggplot() +
geom_raster(data = par_res.df5, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
ggplot() +
geom_raster(data = par_res.df6, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
ggplot() +
geom_raster(data = par_res.df7, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
ggplot() +
geom_raster(data = par_res.df8, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
ggplot() +
geom_raster(data = par_res.df9, aes(x = cue_range, y = cue_range_b, fill = cr)) +
facet_wrap(~id)
