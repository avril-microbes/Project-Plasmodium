geom_histogram(color = "variable") +
theme_bw()
ggplot(arima.df, aes(RMSE)) +
geom_histogram(fill = "variable") +
theme_bw()
ggplot(arima.df, aes(RMSE)) +
geom_histogram(fill = variable) +
theme_bw()
ggplot(arima.df, aes(RMSE, fill = variable)) +
geom_histogram() +
theme_bw()
ggplot(arima.df, aes(RMSE, fill = variable)) +
geom_histogram(alpha = 0.6) +
theme_bw()
gam
arima.mod$AJ5154_2_1_evolution_2011$fitted
plot(arima.mod$AJ5154_2_1_evolution_2011$fitted)
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
fitted.ls
arima.mod
fitted.ls/residual_mean.ls
fitted.ls/residual.ls
mapply(function(x,y) x/y, fitted.ls, residual.ls)
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) x/y, fitted.ls, residual.ls)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr.ls),
variable = variable)
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
#rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) x/y, fitted.ls, residual.ls)
# turn to df
res.df <- data.frame(#RMSE = unlist(rmse.ls),
SNR = unlist(snr.ls),
variable = variable)
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
ggplot(arima.df, aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6) +
theme_bw()
arima.df
snr.ls
snr.ls <- mapply(function(x,y) x/y, fitted.ls, residual.ls)
snr.ls
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) x/y, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
arima.df
snr_mean.ls <- lapply(snr.ls, mean)
snr_mean.ls
snr.ls
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) (x/y)^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
return(res.df)
}
snr.ls
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) (x+1/y+1)^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
return(res.df)
}
snr.ls
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
arima.df
ggplot(arima.df, aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6) +
theme_bw()
ggplot(arima.df, aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, binwidth = 1) +
theme_bw()
arima.df
arima.df %>% filter(SNR<1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, binwidth = 1) +
theme_bw()
arima.df %>% filter(SNR<1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 1) +
theme_bw()
arima.df %>% filter(SNR<1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100) +
theme_bw()
arima.df %>% filter(SNR<1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df <- rbind(asex, gam, rbc)
arima.df
arima.df %>% group_by(variable) %>% summarize(n = n())
arima.df %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df %>% filter(SNR<100) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df %>% filter(SNR<1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
unlist(snr.ls)
do.call(snr.ls, rbind)
do.call(snr.ls, rbind)
do.call(unlist(snr.ls), rbind)
snr.ls
do.call(snr.ls, cbind)
do.call(snr.ls, rbind)
do.call(cbind, snr.ls)
as.data.frame(do.call(cbind, snr.ls))
as.data.frame(do.call(rbind, snr.ls))
as.data.frame(do.call(cbind, snr.ls))
as.data.frame(do.call(cbind, snr.ls)) %>%
gather()
as.data.frame(do.call(cbind, snr.ls)) %>%
tidyr::gather()
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
res2.df <- as.data.frame(do.call(cbind, snr.ls)) %>%
tidyr::gather()
return(res2.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
arima.df
arima.df  %>%
ggplot(aes(value, fill = key)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
asex
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
res2.df <- as.data.frame(do.call(cbind, snr.ls)) %>%
tidyr::gather()
res2.df$variable <- variable
return(res2.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
arima.df
arima.df  %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value <1000) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value <500) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value < 100) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value < 25) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value < 1000) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
res2.df <- as.data.frame(do.call(cbind, snr.ls)) %>%
tidyr::gather()
res2.df$variable <- variable
return(res.df)
}
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter(value < 1000) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
res2.df <- as.data.frame(SNR = do.call(cbind, snr.ls)) %>%
tidyr::gather()
res2.df$variable <- variable
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
# write function to perform auto arima for groups
bulk_arima <- function(df, variable){
# get sample size
n <- n_distinct(df$id)
# select relevent columns
df_p <- df %>% dplyr::select(variable, id)
# split df by unique id
df.ls <- split(df_p, df$id)
# get variable data
data <- lapply(df.ls, function(x) x %>% select(variable))
# auto arima
arima.mod <- lapply(data, auto.arima)
# calculate RMSE
residual.ls <- lapply(arima.mod, "residuals")
rmse.ls <- lapply(residual.ls, function(x) sqrt(sum(x^2)/n))
# calculate SNR
fitted.ls <- lapply(arima.mod, "fitted")
snr.ls <- mapply(function(x,y) ((x+1)/(y+1))^2, fitted.ls, residual.ls)
snr_mean.ls <- lapply(snr.ls, mean)
# turn to df
res.df <- data.frame(RMSE = unlist(rmse.ls),
SNR = unlist(snr_mean.ls),
variable = variable)
res2.df <- as.data.frame(do.call(cbind, snr.ls)) %>%
tidyr::gather()
res2.df$value <- "SNR"
res2.df$variable <- variable
return(res.df)
}
asex <- bulk_arima(exp_ss_dose.df, "asex")
gam <- bulk_arima(exp_ss_dose.df, "gam")
gam <- bulk_arima(exp_ss_dose.df, "gam")
rbc <- bulk_arima(exp_ss_dose.df, "RBC")
arima.df <- rbind(asex, gam, rbc)
arima.df  %>% filter( SNR < 1000) %>%
ggplot(aes(value, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df  %>% filter( SNR < 1000) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 100, position="identity") +
theme_bw()
arima.df %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 500) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df
arima.df %>% filter(SNR < 500, variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 500) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 100) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 200) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 300) %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 300, variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 500, variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 1000, variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
arima.df %>% filter(SNR < 10000, variable == "RBC") %>%
ggplot(aes(SNR, fill = variable)) +
geom_histogram(alpha = 0.6, bins = 200, position="identity") +
theme_bw()
