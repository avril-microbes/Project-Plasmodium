geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fee090", "#91bfdb"))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
# plot
opt_cue_pl.Cpre <- ggplot() +
geom_path(data = dc_si.poor, aes(x= total, y = R, group = id), color = "dark grey", arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
labs(color = "Single infection\nhigh-performingcues", x = "Total iRBC per \u03bcL", y = "RBC per \u03bcL") +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE, accuracy = 0.1)) +
guides(shape = FALSE)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
# plot
opt_cue_pl.Cpre <- ggplot() +
geom_path(data = dc_si.poor, aes(x= total, y = R, group = id), color = "dark grey", arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
labs(color = "Single infection\nhigh-performing cues", x = "Total iRBC per \u03bcL", y = "RBC per \u03bcL") +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE, accuracy = 0.1)) +
guides(shape = FALSE)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.3, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), arrow = arrow(type = "closed", angle = 10, length = unit(0.3, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 2, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label)) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 1) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
# get relevent variables
dc_ci <- ci_dyn.df %>%
filter(variable == "I1" | variable == "Ig1" | variable == "R")
dc_ci
# morph into skinny format
dc_ci.df <- tidyr::pivot_wider(dc_ci, names_from = variable, values_from = value, id_cols = c(time, label)) %>%
mutate(total = I1+Ig1)
# good cue bad cue
ci_cue_dv <- ci_max_tau %>%
mutate(classification = case_when(
fitness_si > 4.5 ~ "High-performing",
fitness_si <= 4.5 ~ "Poor-performing"
))
# good cue bad cue
ci_cue_dv <- ci_max_tau %>%
mutate(classification = case_when(
fitness_ci > 4.5 ~ "High-performing",
fitness_ci <= 4.5 ~ "Poor-performing"
))
ci_cue_dv
# join with classificaiton
dc_ci.df2 <- dc_ci.df %>% left_join(ci_cue_dv)
# split into top erforming and poor-performing cues
dc_ci.high <- dc_ci.df2 %>% filter(classification == "High-performing")
dc_ci.poor <- dc_ci.df2 %>% filter(classification == "Poor-performing")
# join high performing with label
dc_ci.high2 <- dc_si.high %>% left_join(ez_label, by = c("label" = "label_ci"))
# join high performing with label
dc_ci.high2 <- dc_ci.high %>% left_join(ez_label, by = c("label" = "label_ci"))
dc_ci.high2
# plot
opt_cue_pl.Cpre2 <- ggplot() +
geom_path(data = dc_ci.poor, aes(x= total, y = R, group = label), color = "dark grey", arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
labs(color = "Co-infection\nhigh-performing cues", x = "Total iRBC per \u03bcL", y = "RBC per \u03bcL") +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE, accuracy = 0.1)) +
guides(shape = FALSE)
ggplot() +
geom_path(data = dc_ci.poor, aes(x= total, y = R, group = label), color = "dark grey", arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
labs(color = "Co-infection\nhigh-performing cues", x = "Total iRBC per \u03bcL", y = "RBC per \u03bcL") +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE, accuracy = 0.1)) +
guides(shape = FALSE)
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"))
ggsave(here("figures/report21/disease_curve.png"), width = 10, height = 6)
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggsave(here("figures/report21/opt_cue_final.png"))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 3))
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 3))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12)
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 9)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 2.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8.5)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 2))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom")
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2)
ggsave(here("figures/report21/opt_cue_final.png"), width = 14, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom") +
guides(shape = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom") +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 3),
legend.text = element_text(size = 3)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position="bottom",
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.1, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.7, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(1, 0.7),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.9, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8)) +
guides(color = guide_legend(override.aes = list(size = 1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.5)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.5)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C2 <- opt_cue_pl.Cpre2 +
geom_point(data = dc_ci.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_ci.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb")) +
theme(legend.position = c(0.8, 0.8),
legend.title = element_text(size = 7),
legend.text = element_text(size = 7)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 12.5, height = 8)
ggsave(here("figures/report21/opt_cue_final.png"), width = 13, height = 8.2)
opt_cue_pl.C1 <- opt_cue_pl.Cpre +
geom_point(data = dc_si.high2 %>% filter(row_number() %% 1000 ==0), aes(x = total, y = R, color = ez_label, shape = ez_label), size = 2) +
geom_path(data = dc_si.high2, aes(x= total, y = R, group = ez_label, color = ez_label), size = 1, arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
scale_color_manual(values=c( "#4575b4", "#fc8d59", "#fdcb44", "#91bfdb"))  +
theme(legend.position = c(0.85, 0.8),
legend.title = element_text(size = 6.5),
legend.text = element_text(size = 6.5)) +
guides(color = guide_legend(override.aes = list(size = 0.1)))
opt_cue_pl.C <- ggarrange(opt_cue_pl.C1, opt_cue_pl.C2, align = "hv")
ggsave(here("figures/report21/disease_curve.png"), width = 12, height = 5)
opt_cue_pl.BC <- ggarrange(opt_cue_pl.B, opt_cue_pl.C, labels = c("B", "C"), ncol = 1)
ggarrange(opt_cue_pl.A, opt_cue_pl.BC, labels = c("A", ""), ncol = 2, widths = c(1, 1.5))
ggsave(here("figures/report21/opt_cue_final.png"), width = 13, height = 8.2)
# import in dataset
static.df <- read.csv(here("data/ci_static.csv"))
static.df
ez_label
static.df
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci_1"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# reorder the cues and get proper labels
ez_label <- cbind.data.frame(
id_ci = c("I-i_none", "I-i_log",
"I1+I2_none", "I1+I2_log",
"Ig-i_none", "Ig-i_log",
"I+Ig_none", "I+Ig_log",
"sum_none", "sum_log",
"G-i_none", "G-i_log",
"G1+G2_none", "Ig1+Ig2_none",
"R_none", "R_log"),
id_si = c("I_none", "I_log",
"I_none", "I_log",
"Ig_none", "Ig_log",
"I+Ig_none", "I+Ig_log",
"I+Ig_none", "I+Ig_log",
"G_none", "G_log",
"G_none", "Ig_none",
"R_none", "R_log"),
label_ci = c("I", "I log",
"I1+I2", "I1+I2 log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"sum", "sum log",
"G", "G log",
"G1+G2", "Ig1+Ig2",
"R", "R log"),
label_si = c("I", "I log",
"I", "I log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"I+Ig", "I+Ig log",
"G", "G log",
"G", "Ig",
"R", "R log"),
ez_label = c("Asexual iRBC", "Asexual iRBC log10",
"Total asexual iRBC", "Total asexual\niRBC log10",
"Sexual iRBC", "Sexual iRBC log10",
"Asexual&sexual iRBC", "Asexual&sexual\niRBC log10",
"Total iRBC", "Total iRBC log10",
"Gametocyte", "Gametocyte log10",
"Total gametocyte", "Total sexual iRBC",
"RBC", "RBC log10")
)
write.csv(ez_label, here("data/ez_label.csv"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# reorder the cues and get proper labels
ez_label <- cbind.data.frame(
id_ci = c("I-i_none", "I-i_log",
"I1+I2_none", "I1+I2_log",
"Ig-i_none", "Ig-i_log",
"I-i+Ig-i_none", "I-i+Ig-i_log",
"sum_none", "sum_log",
"G-i_none", "G-i_log",
"G1+G2_none", "Ig1+Ig2_none",
"R_none", "R_log"),
id_si = c("I_none", "I_log",
"I_none", "I_log",
"Ig_none", "Ig_log",
"I+Ig_none", "I+Ig_log",
"I+Ig_none", "I+Ig_log",
"G_none", "G_log",
"G_none", "Ig_none",
"R_none", "R_log"),
label_ci = c("I", "I log",
"I1+I2", "I1+I2 log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"sum", "sum log",
"G", "G log",
"G1+G2", "Ig1+Ig2",
"R", "R log"),
label_si = c("I", "I log",
"I", "I log",
"Ig", "Ig log",
"I+Ig", "I+Ig log",
"I+Ig", "I+Ig log",
"G", "G log",
"G", "Ig",
"R", "R log"),
ez_label = c("Asexual iRBC", "Asexual iRBC log10",
"Total asexual iRBC", "Total asexual\niRBC log10",
"Sexual iRBC", "Sexual iRBC log10",
"Asexual&sexual iRBC", "Asexual&sexual\niRBC log10",
"Total iRBC", "Total iRBC log10",
"Gametocyte", "Gametocyte log10",
"Total gametocyte", "Total sexual iRBC",
"RBC", "RBC log10")
)
write.csv(ez_label, here("data/ez_label.csv"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci"))
# join with labelling
static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci"))
# join with labelling
static.df2 <- static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci"))
# get reverse order, which is simply invovles switching the cues around the multiplying the fitness by negative 1
static.df2
# join with labelling
static.df2 <- static.df %>%
left_join(select(ez_label, id_ci, label_ci_1 = label_ci), by = c("id_1" = "id_ci")) %>%
left_join(select(ez_label, id_ci, label_ci_2 = label_ci), by = c("id_2" = "id_ci")) %>%
mutate(fitness_diff = fitness_1 - fitness_2) %>%
select(label_ci_1, label_ci_2, fitness_diff)
# get reverse order, which is simply invovles switching the cues around the multiplying the fitness by negative 1
static.df3 <- static.df2
static.df3
names(static.df3) <- c("label_ci_2", "label_ci_1", "fitness_diff")
static.df3$fitness_diff <- static.df2$fitness_diff * -1
static.df3
# join
static.df4 <- rbind(static.df2, static.df3)
static.df4
