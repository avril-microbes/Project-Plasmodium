R_log_range <- seq(log10(10^6), log10(10^8), by = log10((10^8)-(10^6))/5000)
cl <- makeCluster(detectCores()); setDefaultCluster(cl = cl)
library(ggplot2)
library(dplyr)
library(here)
library(doParallel)
library(doRNG)
library(GA)
library(optimParallel)
R_log_range <- seq(log10(10^6), log10(10^8), by = log10((10^8)-(10^6))/5000)
library(optimParallel)
R_log_range <- seq(log10(10^6), log10(10^8), by = log10((10^8)-(10^6))/5000)
cl <- makeCluster(detectCores()); setDefaultCluster(cl = cl)
si_R_log.local <- optimParallel(
par =rep(-0.9841931, 12.20793, -30.23427, 63.48455),
fn = chabaudi_si_clean,
control = list(trace = 6, fnscale = -1),
immunity = "tsukushi",
parameters = parameters_tsukushi,
time_range = time_range,
cue = "R",
log_cue = "log10",
cue_range = R_log_range,
solver = "vode")
library(optimParallel)
R_log_range <- seq(log10(10^6), log10(10^8), by = log10((10^8)-(10^6))/5000)
cl <- makeCluster(detectCores()); setDefaultCluster(cl = cl)
si_R_log.local <- optimParallel(
par = c(-0.9841931, 12.20793, -30.23427, 63.48455),
fn = chabaudi_si_clean,
control = list(trace = 6, fnscale = -1),
immunity = "tsukushi",
parameters = parameters_tsukushi,
time_range = time_range,
cue = "R",
log_cue = "log10",
cue_range = R_log_range,
solver = "vode")
source(here("functions/chabaudi_si_clean.R"))
cl <- makeCluster(detectCores()); setDefaultCluster(cl = cl)
si_R_log.local <- optimParallel(
par = c(-0.9841931, 12.20793, -30.23427, 63.48455),
fn = chabaudi_si_clean,
control = list(trace = 6, fnscale = -1),
immunity = "tsukushi",
parameters = parameters_tsukushi,
time_range = time_range,
cue = "R",
log_cue = "log10",
cue_range = R_log_range,
solver = "vode")
source(here("functions/chabaudi_si_sto.R"))
source(here("functions/chabaudi_si_clean.R"))
parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
lambda = 3.7*10^5,
mu = 0.025,
p = 8*10^-6, # doubled form original
alpha = 1,
alphag = 2,
beta = 5.721,
mum = 48,
mug = 4,
I0 = 43.85965,
Ig0 = 0,
a = 150,
b = 100,
sp = 1,
psin = 16.69234,
psiw = 0.8431785,
phin = 0.03520591,
phiw = 550.842,
iota = 2.18*(10^6),
rho = 0.2627156)
time_range <- seq(0, 20, by = 1e-3)
I_log_range <- seq(0, log10(10^8), by = log10(10^8)/5000)
library(optimParallel)
R_log_range <- seq(log10(10^6), log10(10^8), by = log10((10^8)-(10^6))/5000)
cl <- makeCluster(detectCores()); setDefaultCluster(cl = cl)
si_R_log.local <- optimParallel(
par = c(-0.9841931, 12.20793, -30.23427, 63.48455),
fn = chabaudi_si_clean,
control = list(trace = 6, fnscale = -1),
immunity = "tsukushi",
parameters = parameters_tsukushi,
time_range = time_range,
cue = "R",
log_cue = "log10",
cue_range = R_log_range,
solver = "vode")
stopCluster(cl)
si_R_log.local
source(here("fumctions/par_to_df.R"))
source(here("functions/par_to_df.R"))
si_R_log.rn <- par_to_df(c(-0.9462285,  12.3937075, -30.4948618,  63.3172971), R_log_range)
plot(si_R_log.rn$cue_range, si_R_log.rn$cr, type = "lines")
# plto dynamics
si_R_log.dyn <- chabaudi_si_clean(
parameters_cr = c(-0.9462285,  12.3937075, -30.4948618,  63.3172971)
immunity = "tsukushi",
# plto dynamics
si_R_log.dyn <- chabaudi_si_clean(
parameters_cr = c(-0.9462285,  12.3937075, -30.4948618,  63.3172971),
immunity = "tsukushi",
parameters = parameters_tsukushi,
time_range = time_range,
cue = "R",
log_cue = "log10",
cue_range = R_log_range,
solver = "vode",
dyn = TRUE
)
si_R_log.dyn
ggplot() +
geom_line(data =si_R_log.dyn, aes(x = time, y = value)) +
facet_wrap(~variables, scales = "free") +
theme_bw()
ggplot() +
geom_line(data = si_R_log.dyn, aes(x = time, y = value)) +
facet_wrap(~variables, scales = "free") +
theme_bw()
si_R_log.dyn
ggplot() +
geom_line(data = si_R_log.dyn, aes(x = time, y = value)) +
facet_wrap(~variable, scales = "free") +
theme_bw()
ggplot() +
geom_line(data = si_R_log.dyn, aes(x = time, y = value)) +
facet_wrap(~variable, scales = "free") +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) â‰ 
ggplot() +
geom_line(data = si_R_log.dyn, aes(x = time, y = value)) +
facet_wrap(~variable, scales = "free") +
scale_y_continuous(labels = function(x) format(x, scientific = TRUE)) +
theme_bw()
plot(si_R_log.rn$cue_range, si_R_log.rn$cr, type = "lines")
library(dplyr)
library(ggplot2)
library(here)
library(deSolve)
library(crone)
library(optimParallel)
library(dplyr)
library(ggplot2)
library(here)
library(npreg)
library(splines)
library(forecast)
library(hts)
library(ggpubr)
library(nlme)
library(astsa)
# import in https://academic.oup.com/emph/article/2018/1/127/5045871?login=true
## (2018 published in EMPH)
emph_2018 <- readxl::read_xls(here("experimental_data/Huijben_2018_EMPH.xls"), sheet = 1)
# import in https://onlinelibrary.wiley.com/doi/10.1111/j.1558-5646.2010.01068.x
## (2010 published in Evolution)
evo_2010 <- readxl::read_xls(here("experimental_data/Huijben_2010_evolution.xls"), sheet = 1)
# import in https://onlinelibrary.wiley.com/doi/10.1111/j.1420-9101.2011.02369.x
## (2013 in PLoS pathogen)
plos_2013_1 <- readxl::read_xlsx(here("experimental_data/Huijben_2013_PLoS.xlsx"), sheet = 2)
plos_2013_2 <- readxl::read_xlsx(here("experimental_data/Huijben_2013_PLoS.xlsx"), sheet = 3)
# import in https://onlinelibrary.wiley.com/doi/10.1111/j.1420-9101.2011.02369.x
## (2011 in Journal of Evolutionary Biology)
eseb_2011 <- readxl::read_xls(here("experimental_data/Huijben_2011_eseb.xls"), sheet = 1)
# import in https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3939351/
## (2011 in Journal of American naturalist)
amna_2011 <- readxl::read_xls(here("experimental_data/Pollitt_2011_naturalist.xls"), sheet = 1)
## for EMPH 2018 study, include only infection series without drugs were R-inoculum is administered by itself, which includes 6, 7, 8, 9, 10. Box 6 has a starting inoculum number of 10^6, which is most similar to other studies. Filtering between day 3-21 because those are the days where we have single day data.
emph_2018_ss.df <- emph_2018 %>%
filter(Box %in% seq(6, 10) &
dplyr::between(Day, 3, 21)) %>%
mutate(dose = case_when(
Box == 6 ~ 10^6,
Box == 7 ~ 10^5,
Box == 8 ~ 10^3,
Box == 9 | Box == 10 ~ 10^1
)) %>%
mutate(strain = "As6p",
study = "emph2018",
study_strain = paste0(strain, study),
id = paste0(study, strain, Box, Mouse, 1),
RBC = RBC * (10^6)) %>%
select(day = Day,
mouse = Mouse,
RBC,
asex = Rasex,
gam = Rgam,
dose,
strain,
study,
study_strain,
id)
## for 2011 eseb, only day 3-17 data are analyzed because those are the days where gametocyte data are available
eseb_2011_ss.df <- eseb_2011 %>%
filter(Clones == "R" & between(Day, 3, 17) &
Drugs == "N") %>%
mutate(dose = 10^6,
strain = "As8p",
study = "eseb2011",
study_strain = paste0(strain, study),
RBC = RBC*(10^6),
id = paste0(study, strain, Box, Mouse, 2)) %>%
select(day = Day,
mouse = Mouse,
RBC,
asex = R.asex,
gam = R.gam,
dose,
strain,
study,
study_strain,
id)
## for evolution_2010, single infection data for both resistant and susceptible clones are available without drug treatment
evolution_2010_ss.df <- evo_2010 %>%
filter(Clone == "R" | Clone == "S") %>%
filter(between(Day, 3, 21) &
Drugs == "nodrugs") %>%
mutate(asex = R.asex + S.asex,
gam = R.gam + S.gam,
dose = 10^6,
RBC = RBC*(10^6),
study = "evol2011",
strain = ifelse(Clone == "R", "As12", "AJ51"),
study_strain = paste0(strain, "_", study),
id = paste0(study, strain, Box, Mouse, 3)) %>%
select(day = Day,
mouse = Mouse,
RBC,
asex,
gam,
dose,
strain,
study,
study_strain,
id)
## for amnat 2011, get single infection data. Filter out any mice that have missing data. Set negative asexuasl data ot 0
amna_2011_ss.df <-  amna_2011 %>%
filter(treat %in% c("AJ", "AS", "ER", "CR", "CW", "DK")) %>%
mutate(asex = tot.para - tot.gcyte,
gam = tot.gcyte,
dose = 10^6,
study = "amna_2011",
RBC = rbc/(10^6),
study_strain = paste0(treat, "_", study),
id = paste0(study, treat, div, mouse, 4)) %>%
mutate(asex = ifelse(asex < 0, 0, asex)) # sometimes total parasite is less than gametocyte so need to correct for this
### check for NA by groups
amna_na.id <- amna_2011_ss.df %>%
filter_at(vars(asex, gam, RBC), all_vars(is.na(.))) %>%
distinct(id) %>%
select(id)
amna_2011_ss.df2 <- amna_2011_ss.df %>%
filter(!(id %in% amna_na.id$id)) %>%
select(day,
mouse,
RBC,
asex,
gam,
dose,
strain = treat,
study,
study_strain,
id)
# rbind
exp_ss.df <- rbind(emph_2018_ss.df, eseb_2011_ss.df, evolution_2010_ss.df, amna_2011_ss.df2)
# correct RBC to actual density (in unit of RBC/uL)
exp_ss_dose.df <- exp_ss.df %>% filter(dose == 10^6)
# add logged parameters
exp_ss_dose.df <- exp_ss_dose.df %>%
mutate(log10_asex = log10(asex+1),
log10_RBC = log10(RBC+1),
log10_gam = log10(gam+1))
# get dataset with only resistance strain
exp_ss_R.df <- exp_ss_dose.df %>% filter(strain != "AJ51")
# RBC and asexual
rbc_asex <- ggplot(exp_ss.df) +
geom_point(aes(y = RBC, x = asex)) +
geom_path(aes(y = RBC, x = asex, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# RBC and gametocyte
rbc_gam <- ggplot(exp_ss.df) +
geom_point(aes(y = RBC, x = gam)) +
geom_path(aes(y = RBC, x = gam, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# asex and gametocyte
asex_gam <- ggplot(exp_ss.df) +
geom_point(aes(y = asex, x = gam)) +
geom_path(aes(y = asex, x = gam, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# RBC and asexual
## log RBC only
rbc_log_asex <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(RBC), x = asex)) +
geom_path(aes(y = log10(RBC), x = asex, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
## log asex only
rbc_asex_log <- ggplot(exp_ss.df) +
geom_point(aes(y = RBC, x = log10(asex))) +
geom_path(aes(y = RBC, x = log10(asex), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
## log both
rbc_asex_log2 <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(RBC), x = log10(asex))) +
geom_path(aes(y = log10(RBC), x = log10(asex), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# RBC and gametocyte
## log RBC only
rbc_log_gam <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(RBC), x = gam)) +
geom_path(aes(y = log10(RBC), x = gam, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
## log gametocyte only
rbc_gam_log <- ggplot(exp_ss.df) +
geom_point(aes(y = RBC, x = log10(gam))) +
geom_path(aes(y = RBC, x = log10(gam), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# log bRBC and gametocyte
rbc_gam_log2 <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(RBC), x = log10(gam))) +
geom_path(aes(y = log10(RBC), x = log10(gam), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# log asex only
asex_log_gam <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(asex), x = gam)) +
geom_path(aes(y = log10(asex), x = gam, colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# log gam only
asex_gam_log <- ggplot(exp_ss.df) +
geom_point(aes(y = asex, x = log10(gam))) +
geom_path(aes(y = asex, x = log10(gam), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
# log both
asex_gam_log2 <- ggplot(exp_ss.df) +
geom_point(aes(y = log10(asex), x = log10(gam))) +
geom_path(aes(y = log10(asex), x = log10(gam), colour = day, group = id), arrow = arrow(type = "closed", angle = 10, length = unit(0.2, "inches"))) +
theme_bw()+ scale_y_continuous(labels = function(x) format(x, scientific = TRUE))
rbc_asex_cat <- ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2,
rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2,
asex_gam, asex_log_gam, asex_gam_log, asex_gam_log2,
common.legend = T, ncol = 4)
rbc_asex_cat
ggsave(here("figures/report13"), width = 20, height = 20)
ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2,
rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2,
asex_gam, asex_log_gam, asex_gam_log, asex_gam_log2,
common.legend = T, ncol = 4)
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 20)
ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2, rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2,asex_gam, asex_log_gam, asex_gam_log, asex_gam_log2,common.legend = T, ncol = 4)
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 20)
asex_gam_cat <- ggarrange(asex_gam, asex_log_gam, asex_gam_log, asex_gam_log)
rbc_gam_cat <- ggarrange(rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2)
ggarrange(rbc_asex_cat, rbc_gam_cat,common.legend = T, ncol = 4)
ggarrange(rbc_asex_cat, rbc_gam_cat, common.legend = T, ncol = 1)
ggarrange(rbc_asex_cat, rbc_gam_cat)
rbc_asex_cat
rbc_asex_cat <- ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2, ncol = 4)
rbc_asex_cat
rbc_asex_cat <- ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2, ncol = 4)
rbc_gam_cat <- ggarrange(rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2, ncol = 4)
asex_gam_cat <- ggarrange(asex_gam, asex_log_gam, asex_gam_log, asex_gam_log, ncol = 4)
rbc_asex_cat
ggarrange(rbc_asex_cat, rbc_gam_cat)
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 20)
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1)
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1, common.legend = T)
rbc_asex_cat <- ggarrange(rbc_asex, rbc_log_asex, rbc_asex_log, rbc_asex_log2, ncol = 4, common.legend = T)
rbc_gam_cat <- ggarrange(rbc_gam, rbc_log_gam, rbc_gam_log, rbc_gam_log2, ncol = 4, common.legend = T)
asex_gam_cat <- ggarrange(asex_gam, asex_log_gam, asex_gam_log, asex_gam_log, ncol = 4, common.legend = T)
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1)
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1, labels = c("A", "B","C"))
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1, labels = c("A", "B","C"))
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 20)
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 17)
asex_gam_cat <- ggarrange(asex_gam, asex_log_gam, asex_gam_log, asex_gam_log2, ncol = 4, common.legend = T)
asex_gam_cat <- ggarrange(asex_gam, asex_log_gam, asex_gam_log, asex_gam_log2, ncol = 4, common.legend = T)
ggarrange(rbc_asex_cat, rbc_gam_cat, asex_gam_cat, ncol = 1, labels = c("A", "B","C"))
ggsave(here("figures/report13/figure3_phase_plot.png"), width = 20, height = 17)
