
Lmod is automatically replacing "intel/2020.1.217" with "gcc/9.3.0".


Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/4.0.3


R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R script to submit parallelized genetic algorithm optimzied runs.
> 
> # load libraries
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(GA)
Package 'GA' version 3.2.2
Type 'citation("GA")' for citing this R package in publications.

Attaching package: ‘GA’

The following object is masked from ‘package:utils’:

    de

> library(here)
here() starts at /project/6004331/wanglu57/Project_Plasmodium
> library(doRNG)
Loading required package: rngtools
> 
> source(here::here("functions/ga_verbose.R"), local = T)
> source(here::here("functions/chabaudi_si_clean.R"), local = T)
> # load function
> #-----------------------------#
> # load in parameters
> #-----------------------------#
> parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
+                          lambda = 3.7*10^5,
+                          mu = 0.025, 
+                          p = 8*10^-6, # doubled form original
+                          alpha = 1, 
+                          alphag = 2, 
+                          beta = 5.721, 
+                          mum = 48, 
+                          mug = 4, 
+                          I0 = 43.85965, 
+                          Ig0 = 0, 
+                          a = 150, 
+                          b = 100, 
+                          sp = 1,
+                          psin = 16.69234,
+                          psiw = 0.8431785,
+                          phin = 0.03520591, 
+                          phiw = 550.842,
+                          iota = 2.18*(10^6),
+                          rho = 0.2627156)
> 
> time_range <- seq(0, 20, by = 1e-3)
> 
> G_range <- seq(0, 10^5, by = (10^5)/5000)
> 
> #-----------------------------#
> # Begin parallelized code
> #----------------------------#
> 
> 
> # Create an array from the NODESLIST environnement variable
> nodeslist = unlist(strsplit(Sys.getenv("NODESLIST"), split=" "))
> 
> # Create the cluster with the nodes name. One process per count of node name.
> # nodeslist = node1 node1 node2 node2, means we are starting 2 processes on node1, likewise on node2.
> cl = makeCluster(nodeslist, type = "PSOCK") 
> registerDoParallel(cl)
> clusterExport(cl,c("ga_verbose", "time_range", "parameters_tsukushi", "G_range", "chabaudi_si_clean")) 
> clusterCall(cl, library, package = "mclust", character.only = TRUE)
[[1]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[2]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[3]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[4]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[5]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[6]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[7]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[8]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[9]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[10]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[11]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[12]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[13]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[14]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[15]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[16]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[17]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[18]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[19]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[20]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[21]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[22]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[23]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[24]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[25]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[26]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[27]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[28]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[29]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[30]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[31]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[32]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[33]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[34]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[35]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[36]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[37]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[38]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[39]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[40]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[41]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[42]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[43]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[44]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[45]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[46]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[47]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[48]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

> ga_res <- ga_verbose(type = "real-valued", 
+                      function(x)
+                        chabaudi_si_clean(
+                          parameters_cr = c(x[1], x[2], x[3], x[4]), 
+                          parameters = parameters_tsukushi, 
+                          time_range = time_range, 
+                          cue = "G", 
+                          cue_range = G_range, 
+                          log_cue = "none",
+                          immunity = "tsukushi",
+                          solver = "vode"),
+                      lower = c(-5, -100, -500, -1000), # range determined that would alter shape of spline
+                      upper = c(5,100,500, 1000),  
+                      popSize = 20, 
+                      maxiter = 500, # change to 10 for testing purpose 
+                      pmutation = 0.3,
+                      keepBest = TRUE,
+                      run = 50,
+                      parallel = cl,
+                      seed = 137,
+                      monitor = TRUE,
+                      id = "2022-02-01_ga-si-G")
0.4934927 -68.80045 -56.30681 -588.8983[[1]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.4934927 -68.80045 -56.30681 -588.8983

[[2]]
[1] 3.663979

GA | iter = 1 | Mean = 0.6655902 | Best = 3.6639793
1.092545 -38.81551 -272.9669 -737.435[[1]]
         [,1]      [,2]      [,3]     [,4]
[1,] 1.092545 -38.81551 -272.9669 -737.435

[[2]]
[1] 3.763735

GA | iter = 2 | Mean = 1.005427 | Best = 3.763735
0.3381936 -8.410226 -56.10695 -624.0584[[1]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.3381936 -8.410226 -56.10695 -624.0584

[[2]]
[1] 5.184583

GA | iter = 3 | Mean = 2.286394 | Best = 5.184583
0.3381936 -8.410226 -56.10695 -624.0584[[1]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.3381936 -8.410226 -56.10695 -624.0584

[[2]]
[1] 5.184583

GA | iter = 4 | Mean = 3.288106 | Best = 5.184583
0.596472 -22.05176 153.1345 -150.6145[[1]]
         [,1]      [,2]     [,3]      [,4]
[1,] 0.596472 -22.05176 153.1345 -150.6145

[[2]]
[1] 5.663693

GA | iter = 5 | Mean = 3.354329 | Best = 5.663693
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 6 | Mean = 3.469056 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 7 | Mean = 3.895093 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 8 | Mean = 3.993747 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 9 | Mean = 4.158049 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 10 | Mean = 4.287426 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 11 | Mean = 4.129485 | Best = 6.999798
0.1334513 -17.59475 169.2527 -187.1175[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[2]]
[1] 6.999798

GA | iter = 12 | Mean = 4.750269 | Best = 6.999798
0.2072692 -18.73761 118.4028 36.44033[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2072692 -18.73761 118.4028 36.44033

[[2]]
[1] 7.045732

GA | iter = 13 | Mean = 5.025472 | Best = 7.045732
0.2072692 -18.73761 118.4028 36.44033[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2072692 -18.73761 118.4028 36.44033

[[2]]
[1] 7.045732

GA | iter = 14 | Mean = 4.718680 | Best = 7.045732
0.2241324 -19.32777 143.4243 -346.634[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[2]]
[1] 7.117018

GA | iter = 15 | Mean = 5.403427 | Best = 7.117018
0.2241324 -19.32777 143.4243 -346.634[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[2]]
[1] 7.117018

GA | iter = 16 | Mean = 5.451570 | Best = 7.117018
0.2241324 -19.32777 143.4243 -346.634[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[2]]
[1] 7.117018

GA | iter = 17 | Mean = 5.443187 | Best = 7.117018
0.2241324 -19.32777 143.4243 -346.634[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[2]]
[1] 7.117018

GA | iter = 18 | Mean = 4.925898 | Best = 7.117018
0.2241324 -19.32777 143.4243 -346.634[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[2]]
[1] 7.117018

GA | iter = 19 | Mean = 5.406778 | Best = 7.117018
0.1713934 -19.24762 162.451 -359.9328[[1]]
          [,1]      [,2]    [,3]      [,4]
[1,] 0.1713934 -19.24762 162.451 -359.9328

[[2]]
[1] 7.146513

GA | iter = 20 | Mean = 5.413215 | Best = 7.146513
-0.1761643 -4.87849 69.82812 -221.8814[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.1761643 -4.87849 69.82812 -221.8814

[[2]]
[1] 7.75781

GA | iter = 21 | Mean = 6.159245 | Best = 7.757810
0.03622767 -8.785309 70.66436 -126.9618[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] 0.03622767 -8.785309 70.66436 -126.9618

[[2]]
[1] 7.873292

GA | iter = 22 | Mean = 6.458626 | Best = 7.873292
0.03622767 -8.785309 70.66436 -126.9618[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] 0.03622767 -8.785309 70.66436 -126.9618

[[2]]
[1] 7.873292

GA | iter = 23 | Mean = 5.925021 | Best = 7.873292
0.101646 -9.514219 70.57084 -254.302[[1]]
         [,1]      [,2]     [,3]     [,4]
[1,] 0.101646 -9.514219 70.57084 -254.302

[[2]]
[1] 8.067876

GA | iter = 24 | Mean = 6.733429 | Best = 8.067876
-0.0212407 -10.28947 79.07154 -221.0629[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.0212407 -10.28947 79.07154 -221.0629

[[2]]
[1] 8.229036

GA | iter = 25 | Mean = 6.491893 | Best = 8.229036
-0.0212407 -10.28947 79.07154 -221.0629[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.0212407 -10.28947 79.07154 -221.0629

[[2]]
[1] 8.229036

GA | iter = 26 | Mean = 6.540965 | Best = 8.229036
-0.07165123 -9.415145 74.59485 -149.7829[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.07165123 -9.415145 74.59485 -149.7829

[[2]]
[1] 8.232824

GA | iter = 27 | Mean = 6.147696 | Best = 8.232824
-0.07165123 -9.415145 74.59485 -149.7829[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.07165123 -9.415145 74.59485 -149.7829

[[2]]
[1] 8.232824

GA | iter = 28 | Mean = 6.580268 | Best = 8.232824
-0.04872304 -9.273948 120.239 -993.3707[[1]]
            [,1]      [,2]    [,3]      [,4]
[1,] -0.04872304 -9.273948 120.239 -993.3707

[[2]]
[1] 8.388683

GA | iter = 29 | Mean = 6.256392 | Best = 8.388683
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 30 | Mean = 7.350111 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 31 | Mean = 7.828053 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 32 | Mean = 7.475712 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 33 | Mean = 7.285547 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 34 | Mean = 6.533287 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 35 | Mean = 6.141033 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 36 | Mean = 7.173599 | Best = 8.429698
-0.02043604 -9.094326 99.44161 -689.9955[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[2]]
[1] 8.429698

GA | iter = 37 | Mean = 6.235985 | Best = 8.429698
-0.01854717 -9.19915 98.0369 -672.7432[[1]]
            [,1]     [,2]    [,3]      [,4]
[1,] -0.01854717 -9.19915 98.0369 -672.7432

[[2]]
[1] 8.442165

GA | iter = 38 | Mean = 8.043679 | Best = 8.442165
-0.01535049 -8.981789 97.53102 -782.8146[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01535049 -8.981789 97.53102 -782.8146

[[2]]
[1] 8.45904

GA | iter = 39 | Mean = 7.758316 | Best = 8.459040
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 40 | Mean = 7.388689 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 41 | Mean = 6.393677 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 42 | Mean = 5.876987 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 43 | Mean = 5.506702 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 44 | Mean = 5.781474 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 45 | Mean = 6.662649 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 46 | Mean = 6.243140 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 47 | Mean = 6.331238 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 48 | Mean = 6.765749 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 49 | Mean = 7.137948 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 50 | Mean = 6.247780 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 51 | Mean = 6.529412 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 52 | Mean = 5.404201 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 53 | Mean = 6.775508 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 54 | Mean = 6.551911 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 55 | Mean = 6.892740 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 56 | Mean = 6.755032 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 57 | Mean = 5.683612 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 58 | Mean = 5.619903 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 59 | Mean = 5.352861 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 60 | Mean = 6.522777 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 61 | Mean = 6.063250 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 62 | Mean = 6.995330 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 63 | Mean = 7.428430 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 64 | Mean = 6.012999 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 65 | Mean = 7.041649 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 66 | Mean = 6.537534 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 67 | Mean = 6.037154 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 68 | Mean = 4.889551 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 69 | Mean = 5.368246 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 70 | Mean = 4.901990 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 71 | Mean = 5.470092 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 72 | Mean = 5.940084 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 73 | Mean = 7.073569 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 74 | Mean = 6.954358 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 75 | Mean = 6.478688 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 76 | Mean = 5.552794 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 77 | Mean = 5.787991 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 78 | Mean = 6.879264 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 79 | Mean = 7.127670 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 80 | Mean = 6.758655 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 81 | Mean = 7.109616 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 82 | Mean = 6.932895 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 83 | Mean = 7.238663 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 84 | Mean = 6.990643 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 85 | Mean = 6.417940 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 86 | Mean = 6.387954 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 87 | Mean = 7.188837 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 88 | Mean = 5.484018 | Best = 8.459342
-0.01614217 -9.194905 97.44897 -695.8279[[1]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[2]]
[1] 8.459342

GA | iter = 89 | Mean = 6.781569 | Best = 8.459342

> stopCluster(cl)
> 
> print(list(ga_res@bestSol, ga_res@fitnessValue))
[[1]]
[[1]][[1]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.4934927 -68.80045 -56.30681 -588.8983

[[1]][[2]]
         [,1]      [,2]      [,3]     [,4]
[1,] 1.092545 -38.81551 -272.9669 -737.435

[[1]][[3]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.3381936 -8.410226 -56.10695 -624.0584

[[1]][[4]]
          [,1]      [,2]      [,3]      [,4]
[1,] 0.3381936 -8.410226 -56.10695 -624.0584

[[1]][[5]]
         [,1]      [,2]     [,3]      [,4]
[1,] 0.596472 -22.05176 153.1345 -150.6145

[[1]][[6]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[7]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[8]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[9]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[10]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[11]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[12]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.1334513 -17.59475 169.2527 -187.1175

[[1]][[13]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2072692 -18.73761 118.4028 36.44033

[[1]][[14]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2072692 -18.73761 118.4028 36.44033

[[1]][[15]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[1]][[16]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[1]][[17]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[1]][[18]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[1]][[19]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.2241324 -19.32777 143.4243 -346.634

[[1]][[20]]
          [,1]      [,2]    [,3]      [,4]
[1,] 0.1713934 -19.24762 162.451 -359.9328

[[1]][[21]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.1761643 -4.87849 69.82812 -221.8814

[[1]][[22]]
           [,1]      [,2]     [,3]      [,4]
[1,] 0.03622767 -8.785309 70.66436 -126.9618

[[1]][[23]]
           [,1]      [,2]     [,3]      [,4]
[1,] 0.03622767 -8.785309 70.66436 -126.9618

[[1]][[24]]
         [,1]      [,2]     [,3]     [,4]
[1,] 0.101646 -9.514219 70.57084 -254.302

[[1]][[25]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.0212407 -10.28947 79.07154 -221.0629

[[1]][[26]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.0212407 -10.28947 79.07154 -221.0629

[[1]][[27]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.07165123 -9.415145 74.59485 -149.7829

[[1]][[28]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.07165123 -9.415145 74.59485 -149.7829

[[1]][[29]]
            [,1]      [,2]    [,3]      [,4]
[1,] -0.04872304 -9.273948 120.239 -993.3707

[[1]][[30]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[31]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[32]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[33]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[34]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[35]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[36]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[37]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.02043604 -9.094326 99.44161 -689.9955

[[1]][[38]]
            [,1]     [,2]    [,3]      [,4]
[1,] -0.01854717 -9.19915 98.0369 -672.7432

[[1]][[39]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01535049 -8.981789 97.53102 -782.8146

[[1]][[40]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[41]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[42]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[43]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[44]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[45]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[46]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[47]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[48]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[49]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[50]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[51]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[52]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[53]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[54]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[55]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[56]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[57]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[58]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[59]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[60]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[61]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[62]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[63]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[64]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[65]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[66]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[67]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[68]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[69]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[70]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[71]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[72]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[73]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[74]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[75]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[76]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[77]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[78]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[79]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[80]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[81]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[82]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[83]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[84]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[85]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[86]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[87]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[88]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279

[[1]][[89]]
            [,1]      [,2]     [,3]      [,4]
[1,] -0.01614217 -9.194905 97.44897 -695.8279


[[2]]
[1] 8.459342

> 
> 
> 
