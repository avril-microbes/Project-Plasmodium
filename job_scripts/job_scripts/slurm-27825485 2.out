
Lmod is automatically replacing "intel/2020.1.217" with "gcc/9.3.0".


Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/4.0.3


R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R script to submit parallelized genetic algorithm optimzied runs.
> 
> # load libraries
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(GA)
Package 'GA' version 3.2.2
Type 'citation("GA")' for citing this R package in publications.

Attaching package: ‘GA’

The following object is masked from ‘package:utils’:

    de

> library(here)
here() starts at /scratch/wanglu57/job_scripts
> library(doRNG)
Loading required package: rngtools
> 
> source(here::here("ga_verbose.R"), local = T)
> source(here::here("chabaudi_si_clean.R"), local = T)
> # load function
> #-----------------------------#
> # load in parameters
> #-----------------------------#
> parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
+                          lambda = 3.7*10^5,
+                          mu = 0.025, 
+                          p = 8*10^-6, # doubled form original
+                          alpha = 1, 
+                          alphag = 2, 
+                          beta = 5.721, 
+                          mum = 48, 
+                          mug = 4, 
+                          I0 = 43.85965, 
+                          Ig0 = 0, 
+                          a = 150, 
+                          b = 100, 
+                          sp = 1,
+                          psin = 16.69234,
+                          psiw = 0.8431785,
+                          phin = 0.03520591, 
+                          phiw = 550.842,
+                          iota = 2.18*(10^6),
+                          rho = 0.2627156)
> 
> time_range <- seq(0, 20, by = 1e-3)
> 
> R_range <- seq(10^6, 10^8, by = ((10^8)-(10^6))/5000)
> 
> #-----------------------------#
> # Begin parallelized code
> #----------------------------#
> 
> 
> # Create an array from the NODESLIST environnement variable
> nodeslist = unlist(strsplit(Sys.getenv("NODESLIST"), split=" "))
> 
> # Create the cluster with the nodes name. One process per count of node name.
> # nodeslist = node1 node1 node2 node2, means we are starting 2 processes on node1, likewise on node2.
> cl = makeCluster(nodeslist, type = "PSOCK") 
> registerDoParallel(cl)
> clusterExport(cl,c("ga_verbose", "time_range", "parameters_tsukushi", "R_range", "chabaudi_si_clean")) 
> clusterCall(cl, library, package = "mclust", character.only = TRUE)
[[1]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[2]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[3]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[4]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[5]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[6]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[7]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[8]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[9]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[10]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[11]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[12]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[13]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[14]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[15]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[16]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[17]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[18]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[19]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[20]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[21]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[22]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[23]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[24]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[25]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[26]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[27]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[28]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[29]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[30]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[31]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[32]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[33]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[34]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[35]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[36]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[37]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[38]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[39]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[40]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[41]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[42]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[43]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[44]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[45]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[46]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[47]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[48]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

> ga_res <- ga_verbose(type = "real-valued", 
+                      function(x)
+                        chabaudi_si_clean(
+                          parameters_cr = c(x[1], x[2], x[3], x[4]), 
+                          parameters = parameters_tsukushi, 
+                          time_range = time_range, 
+                          cue = "R", 
+                          cue_range = R_range, 
+                          log_cue = "none",
+                          immunity = "tsukushi",
+                          solver = "vode"),
+                      lower = c(-5, -100, -500, -1000), # range determined that would alter shape of spline
+                      upper = c(5,100,500, 1000),  
+                      popSize = 500, 
+                      maxiter = 500, # change to 10 for testing purpose 
+                      pmutation = 0.3,
+                      keepBest = TRUE,
+                      run = 50,
+                      parallel = cl,
+                      seed = 137,
+                      monitor = TRUE,
+                      id = "2022-02-22_ga-si-R")
1.35596 -13.31598 49.62588 445.0185[[1]]
        [,1]      [,2]     [,3]     [,4]
[1,] 1.35596 -13.31598 49.62588 445.0185

[[2]]
[1] 7.799383

GA | iter = 1 | Mean = 0.2998432 | Best = 7.7993828
-0.2917764 -15.53765 204.8317 -535.905[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.2917764 -15.53765 204.8317 -535.905

[[2]]
[1] 7.836404

GA | iter = 2 | Mean = 0.624676 | Best = 7.836404
0.04877902 -10.65264 126.263 -350.2499[[1]]
           [,1]      [,2]    [,3]      [,4]
[1,] 0.04877902 -10.65264 126.263 -350.2499

[[2]]
[1] 7.945445

GA | iter = 3 | Mean = 0.9814675 | Best = 7.9454447
0.04877902 -10.65264 126.263 -350.2499[[1]]
           [,1]      [,2]    [,3]      [,4]
[1,] 0.04877902 -10.65264 126.263 -350.2499

[[2]]
[1] 7.945445

GA | iter = 4 | Mean = 1.221497 | Best = 7.945445
-0.6410494 -0.8578111 56.03189 -524.3303[[1]]
           [,1]       [,2]     [,3]      [,4]
[1,] -0.6410494 -0.8578111 56.03189 -524.3303

[[2]]
[1] 7.983567

GA | iter = 5 | Mean = 1.617396 | Best = 7.983567
-0.6410494 -0.8578111 56.03189 -524.3303[[1]]
           [,1]       [,2]     [,3]      [,4]
[1,] -0.6410494 -0.8578111 56.03189 -524.3303

[[2]]
[1] 7.983567

GA | iter = 6 | Mean = 2.233158 | Best = 7.983567
-0.8731868 2.642016 10.78911 -58.34917[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.8731868 2.642016 10.78911 -58.34917

[[2]]
[1] 7.994416

GA | iter = 7 | Mean = 2.604430 | Best = 7.994416
-0.8731868 2.642016 10.78911 -58.34917[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.8731868 2.642016 10.78911 -58.34917

[[2]]
[1] 7.994416

GA | iter = 8 | Mean = 2.670141 | Best = 7.994416
0.3469064 -8.719173 86.21363 -454.6402[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] 0.3469064 -8.719173 86.21363 -454.6402

[[2]]
[1] 8.00367

GA | iter = 9 | Mean = 2.91735 | Best = 8.00367
-0.7999529 1.411971 17.79535 62.73592[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.7999529 1.411971 17.79535 62.73592

[[2]]
[1] 8.004382

GA | iter = 10 | Mean = 3.077398 | Best = 8.004382
-0.5974136 -1.411536 42.40225 -28.08723[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5974136 -1.411536 42.40225 -28.08723

[[2]]
[1] 8.014469

GA | iter = 11 | Mean = 3.384341 | Best = 8.014469
-0.5974136 -1.411536 42.40225 -28.08723[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5974136 -1.411536 42.40225 -28.08723

[[2]]
[1] 8.014469

GA | iter = 12 | Mean = 4.083102 | Best = 8.014469
-0.5974136 -1.411536 42.40225 -28.08723[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5974136 -1.411536 42.40225 -28.08723

[[2]]
[1] 8.014469

GA | iter = 13 | Mean = 4.811677 | Best = 8.014469
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 14 | Mean = 5.022134 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 15 | Mean = 5.222297 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 16 | Mean = 5.331284 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 17 | Mean = 5.396496 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 18 | Mean = 5.824505 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 19 | Mean = 5.829478 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 20 | Mean = 5.778834 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 21 | Mean = 5.918811 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 22 | Mean = 5.886049 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 23 | Mean = 6.184764 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 24 | Mean = 5.905999 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 25 | Mean = 6.159568 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 26 | Mean = 6.000820 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 27 | Mean = 6.046319 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 28 | Mean = 6.009167 | Best = 8.018041
-0.02433967 -7.511823 77.3149 89.06321[[1]]
            [,1]      [,2]    [,3]     [,4]
[1,] -0.02433967 -7.511823 77.3149 89.06321

[[2]]
[1] 8.018041

GA | iter = 29 | Mean = 6.091331 | Best = 8.018041
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 30 | Mean = 5.904878 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 31 | Mean = 6.321339 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 32 | Mean = 6.280646 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 33 | Mean = 6.025177 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 34 | Mean = 6.201917 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 35 | Mean = 6.061241 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 36 | Mean = 6.024636 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 37 | Mean = 6.164351 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 38 | Mean = 5.914675 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 39 | Mean = 6.059742 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 40 | Mean = 5.956220 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 41 | Mean = 6.069780 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 42 | Mean = 5.896591 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 43 | Mean = 6.400630 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 44 | Mean = 6.235581 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 45 | Mean = 6.247544 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 46 | Mean = 6.399739 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 47 | Mean = 6.159269 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 48 | Mean = 6.108709 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 49 | Mean = 6.214417 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 50 | Mean = 6.182194 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 51 | Mean = 6.239351 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 52 | Mean = 6.107768 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 53 | Mean = 5.867609 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 54 | Mean = 6.034037 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 55 | Mean = 6.182168 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 56 | Mean = 6.137889 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 57 | Mean = 5.770260 | Best = 8.018246
-0.02422959 -7.320872 76.89491 49.40286[[1]]
            [,1]      [,2]     [,3]     [,4]
[1,] -0.02422959 -7.320872 76.89491 49.40286

[[2]]
[1] 8.018246

GA | iter = 58 | Mean = 5.969169 | Best = 8.018246
-0.1523563 -5.95817 67.78949 51.75486[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.1523563 -5.95817 67.78949 51.75486

[[2]]
[1] 8.018246

GA | iter = 59 | Mean = 6.080187 | Best = 8.018246
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 60 | Mean = 6.206660 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 61 | Mean = 6.035873 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 62 | Mean = 6.254908 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 63 | Mean = 6.603541 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 64 | Mean = 6.166876 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 65 | Mean = 6.260675 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 66 | Mean = 6.198301 | Best = 8.018267
-0.1669962 -5.834929 70.35035 -50.7396[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.1669962 -5.834929 70.35035 -50.7396

[[2]]
[1] 8.018267

GA | iter = 67 | Mean = 6.468999 | Best = 8.018267
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 68 | Mean = 6.349838 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 69 | Mean = 6.181936 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 70 | Mean = 6.135274 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 71 | Mean = 6.111173 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 72 | Mean = 6.269019 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 73 | Mean = 6.168436 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 74 | Mean = 6.111019 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 75 | Mean = 6.104128 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 76 | Mean = 5.964019 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 77 | Mean = 6.15868 | Best = 8.01863
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 78 | Mean = 6.158229 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 79 | Mean = 5.873732 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 80 | Mean = 6.270662 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 81 | Mean = 6.195843 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 82 | Mean = 6.090004 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 83 | Mean = 6.173684 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 84 | Mean = 5.984766 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 85 | Mean = 6.348088 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 86 | Mean = 6.057721 | Best = 8.018630
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 87 | Mean = 6.10535 | Best = 8.01863
-0.05738012 -6.79717 69.09227 152.6266[[1]]
            [,1]     [,2]     [,3]     [,4]
[1,] -0.05738012 -6.79717 69.09227 152.6266

[[2]]
[1] 8.01863

GA | iter = 88 | Mean = 6.349829 | Best = 8.018630
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 89 | Mean = 6.251875 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 90 | Mean = 5.961014 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 91 | Mean = 6.261147 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 92 | Mean = 6.158310 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 93 | Mean = 6.132432 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 94 | Mean = 6.036503 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 95 | Mean = 6.132056 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 96 | Mean = 6.085513 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 97 | Mean = 5.928126 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 98 | Mean = 6.057449 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 99 | Mean = 6.175803 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 100 | Mean = 6.299346 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 101 | Mean = 6.157939 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 102 | Mean = 6.240622 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 103 | Mean = 6.252411 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 104 | Mean = 6.129337 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 105 | Mean = 6.300125 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 106 | Mean = 6.202377 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 107 | Mean = 6.022996 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 108 | Mean = 6.281114 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 109 | Mean = 6.228786 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 110 | Mean = 6.070580 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 111 | Mean = 5.815071 | Best = 8.018806
-0.1077975 -6.241393 68.30068 63.7932[[1]]
           [,1]      [,2]     [,3]    [,4]
[1,] -0.1077975 -6.241393 68.30068 63.7932

[[2]]
[1] 8.018806

GA | iter = 112 | Mean = 6.119610 | Best = 8.018806
slurmstepd: error: *** JOB 27825485 ON cdr2442 CANCELLED AT 2022-02-26T16:15:47 DUE TO TIME LIMIT ***
