
Lmod is automatically replacing "intel/2020.1.217" with "gcc/9.3.0".


Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/4.0.3


R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R script to submit parallelized genetic algorithm optimzied runs.
> 
> # load libraries
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(GA)
Package 'GA' version 3.2.2
Type 'citation("GA")' for citing this R package in publications.

Attaching package: ‘GA’

The following object is masked from ‘package:utils’:

    de

> library(here)
here() starts at /scratch/wanglu57/job_scripts
> library(doRNG)
Loading required package: rngtools
> 
> source(here::here("ga_verbose.R"), local = T)
> source(here::here("chabaudi_si_clean.R"), local = T)
> # load function
> #-----------------------------#
> # load in parameters
> #-----------------------------#
> parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
+                          lambda = 3.7*10^5,
+                          mu = 0.025, 
+                          p = 8*10^-6, # doubled form original
+                          alpha = 1, 
+                          alphag = 2, 
+                          beta = 5.721, 
+                          mum = 48, 
+                          mug = 4, 
+                          I0 = 43.85965, 
+                          Ig0 = 0, 
+                          a = 150, 
+                          b = 100, 
+                          sp = 1,
+                          psin = 16.69234,
+                          psiw = 0.8431785,
+                          phin = 0.03520591, 
+                          phiw = 550.842,
+                          iota = 2.18*(10^6),
+                          rho = 0.2627156)
> 
> time_range <- seq(0, 20, by = 1e-3)
> 
> R_range <- seq((10^6), (10^8), ((10^8)-(10^6))/5000)
> 
> #-----------------------------#
> # Begin parallelized code
> #----------------------------#
> 
> 
> # Create an array from the NODESLIST environnement variable
> nodeslist = unlist(strsplit(Sys.getenv("NODESLIST"), split=" "))
> 
> # Create the cluster with the nodes name. One process per count of node name.
> # nodeslist = node1 node1 node2 node2, means we are starting 2 processes on node1, likewise on node2.
> cl = makeCluster(nodeslist, type = "PSOCK") 
> registerDoParallel(cl)
> clusterExport(cl,c("ga_verbose", "time_range", "parameters_tsukushi", "R_range", "chabaudi_si_clean")) 
> clusterCall(cl, library, package = "mclust", character.only = TRUE)
[[1]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[2]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[3]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[4]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[5]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[6]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[7]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[8]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[9]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[10]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[11]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[12]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[13]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[14]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[15]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[16]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[17]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[18]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[19]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[20]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[21]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[22]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[23]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[24]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[25]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[26]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[27]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[28]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[29]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[30]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[31]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[32]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[33]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[34]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[35]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[36]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[37]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[38]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[39]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[40]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[41]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[42]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[43]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[44]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[45]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[46]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[47]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[48]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

> ga_res <- ga_verbose(type = "real-valued", 
+                      function(x)
+                        chabaudi_si_clean(
+                          parameters_cr = c(x[1], x[2], x[3], x[4]), 
+                          parameters = parameters_tsukushi, 
+                          time_range = time_range, 
+                          cue = "R", 
+                          cue_range = R_range, 
+                          log_cue = "none",
+                          immunity = "tsukushi",
+                          solver = "vode"),
+                      lower = c(-1, -100, -1000, -5000), # range determined that would alter shape of spline
+                      upper = c(1, 100, 1000, 5000),  
+                      popSize = 250, 
+                      maxiter = 1000, # change to 10 for testing purpose 
+                      pmutation = 0.3,
+                      keepBest = TRUE,
+                      run = 100,
+                      parallel = cl,
+                      seed = 137,
+                      monitor = TRUE,
+ suggestions = c(0.4834533, -10.72914, 64.90252, 815.7626),
+                      id = "2022-03-06_si-R-emp")
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 1 | Mean = 0.3292555 | Best = 8.0235153
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 2 | Mean = 0.5753124 | Best = 8.0235153
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 3 | Mean = 0.7908612 | Best = 8.0235153
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 4 | Mean = 1.147484 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 5 | Mean = 1.222863 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 6 | Mean = 1.443063 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 7 | Mean = 1.801477 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 8 | Mean = 2.231969 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 9 | Mean = 2.763703 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 10 | Mean = 3.122037 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 11 | Mean = 3.919637 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 12 | Mean = 4.773099 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 13 | Mean = 4.659973 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 14 | Mean = 4.714277 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 15 | Mean = 4.896335 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 16 | Mean = 5.094806 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 17 | Mean = 5.353778 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 18 | Mean = 5.359367 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 19 | Mean = 5.119284 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 20 | Mean = 5.532530 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 21 | Mean = 5.682175 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 22 | Mean = 5.602264 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 23 | Mean = 5.686318 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 24 | Mean = 5.775297 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 25 | Mean = 5.762566 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 26 | Mean = 6.310785 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 27 | Mean = 5.982164 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 28 | Mean = 6.068827 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 29 | Mean = 6.173907 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 30 | Mean = 6.154785 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 31 | Mean = 5.868645 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 32 | Mean = 5.709195 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 33 | Mean = 5.824228 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 34 | Mean = 6.120761 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 35 | Mean = 6.095460 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 36 | Mean = 5.819607 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 37 | Mean = 5.880959 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 38 | Mean = 5.915771 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 39 | Mean = 5.744393 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 40 | Mean = 6.259196 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 41 | Mean = 6.176834 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 42 | Mean = 5.781991 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 43 | Mean = 5.891422 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 44 | Mean = 5.977865 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 45 | Mean = 6.072063 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 46 | Mean = 6.124401 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 47 | Mean = 5.928376 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 48 | Mean = 5.864095 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 49 | Mean = 6.006680 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 50 | Mean = 6.533629 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 51 | Mean = 5.937145 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 52 | Mean = 6.241357 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 53 | Mean = 6.417664 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 54 | Mean = 6.017261 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 55 | Mean = 6.713690 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 56 | Mean = 5.436459 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 57 | Mean = 6.012787 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 58 | Mean = 5.894686 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 59 | Mean = 5.213541 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 60 | Mean = 5.965294 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 61 | Mean = 6.288129 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 62 | Mean = 6.199724 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 63 | Mean = 6.031206 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 64 | Mean = 6.035333 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 65 | Mean = 6.159761 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 66 | Mean = 5.703449 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 67 | Mean = 5.892960 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 68 | Mean = 5.831679 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 69 | Mean = 6.135285 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 70 | Mean = 6.058585 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 71 | Mean = 5.842062 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 72 | Mean = 6.004014 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 73 | Mean = 6.052995 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 74 | Mean = 5.986688 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 75 | Mean = 5.962926 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 76 | Mean = 6.080558 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 77 | Mean = 6.068994 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 78 | Mean = 6.167804 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 79 | Mean = 5.916626 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 80 | Mean = 6.317377 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 81 | Mean = 5.964673 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 82 | Mean = 5.920545 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 83 | Mean = 6.133238 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 84 | Mean = 5.964547 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 85 | Mean = 5.910691 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 86 | Mean = 6.020740 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 87 | Mean = 5.954555 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 88 | Mean = 6.097922 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 89 | Mean = 6.027984 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 90 | Mean = 5.825508 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 91 | Mean = 5.725085 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 92 | Mean = 5.967813 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 93 | Mean = 5.809759 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 94 | Mean = 6.015402 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 95 | Mean = 6.057766 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 96 | Mean = 5.840986 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 97 | Mean = 5.628084 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 98 | Mean = 5.858405 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 99 | Mean = 6.206773 | Best = 8.023515
0.4834533 -10.72914 64.90252 815.7626[[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[2]]
[1] 8.023515

GA | iter = 100 | Mean = 6.077383 | Best = 8.023515

> stopCluster(cl)
> 
> print(list(ga_res@bestSol, ga_res@fitnessValue))
[[1]]
[[1]][[1]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[2]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[3]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[4]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[5]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[6]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[7]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[8]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[9]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[10]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[11]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[12]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[13]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[14]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[15]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[16]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[17]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[18]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[19]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[20]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[21]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[22]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[23]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[24]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[25]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[26]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[27]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[28]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[29]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[30]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[31]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[32]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[33]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[34]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[35]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[36]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[37]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[38]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[39]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[40]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[41]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[42]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[43]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[44]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[45]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[46]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[47]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[48]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[49]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[50]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[51]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[52]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[53]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[54]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[55]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[56]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[57]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[58]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[59]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[60]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[61]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[62]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[63]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[64]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[65]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[66]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[67]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[68]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[69]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[70]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[71]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[72]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[73]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[74]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[75]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[76]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[77]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[78]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[79]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[80]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[81]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[82]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[83]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[84]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[85]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[86]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[87]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[88]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[89]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[90]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[91]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[92]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[93]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[94]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[95]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[96]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[97]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[98]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[99]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626

[[1]][[100]]
          [,1]      [,2]     [,3]     [,4]
[1,] 0.4834533 -10.72914 64.90252 815.7626


[[2]]
[1] 8.023515

> 
> 
> 
