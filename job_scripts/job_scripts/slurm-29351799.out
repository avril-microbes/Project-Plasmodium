
Lmod is automatically replacing "intel/2020.1.217" with "gcc/9.3.0".


Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/4.0.3


R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R script to submit parallelized genetic algorithm optimzied runs.
> 
> # load libraries
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(GA)
Package 'GA' version 3.2.2
Type 'citation("GA")' for citing this R package in publications.

Attaching package: ‘GA’

The following object is masked from ‘package:utils’:

    de

> library(here)
here() starts at /scratch/wanglu57/job_scripts
> library(doRNG)
Loading required package: rngtools
> 
> source(here::here("ga_verbose.R"), local = T)
> source(here::here("chabaudi_si_clean.R"), local = T)
> # load function
> #-----------------------------#
> # load in parameters
> #-----------------------------#
> parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
+                          lambda = 3.7*10^5,
+                          mu = 0.025, 
+                          p = 8*10^-6, # doubled form original
+                          alpha = 1, 
+                          alphag = 2, 
+                          beta = 5.721, 
+                          mum = 48, 
+                          mug = 4, 
+                          I0 = 43.85965, 
+                          Ig0 = 0, 
+                          a = 150, 
+                          b = 100, 
+                          sp = 1,
+                          psin = 16.69234,
+                          psiw = 0.8431785,
+                          phin = 0.03520591, 
+                          phiw = 550.842,
+                          iota = 2.18*(10^6),
+                          rho = 0.2627156)
> 
> time_range <- seq(0, 20, by = 1e-3)
> 
> G_range <- seq(0, log10(6*(10^4)), log10(6*(10^4))/5000)
> 
> #-----------------------------#
> # Begin parallelized code
> #----------------------------#
> 
> 
> # Create an array from the NODESLIST environnement variable
> nodeslist = unlist(strsplit(Sys.getenv("NODESLIST"), split=" "))
> 
> # Create the cluster with the nodes name. One process per count of node name.
> # nodeslist = node1 node1 node2 node2, means we are starting 2 processes on node1, likewise on node2.
> cl = makeCluster(nodeslist, type = "PSOCK") 
> registerDoParallel(cl)
> clusterExport(cl,c("ga_verbose", "time_range", "parameters_tsukushi", "G_range", "chabaudi_si_clean")) 
> clusterCall(cl, library, package = "mclust", character.only = TRUE)
[[1]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[2]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[3]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[4]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[5]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[6]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[7]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[8]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[9]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[10]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[11]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[12]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[13]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[14]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[15]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[16]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[17]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[18]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[19]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[20]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[21]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[22]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[23]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[24]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[25]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[26]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[27]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[28]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[29]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[30]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[31]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[32]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[33]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[34]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[35]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[36]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[37]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[38]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[39]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[40]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[41]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[42]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[43]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[44]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[45]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[46]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[47]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[48]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

> ga_res <- ga_verbose(type = "real-valued", 
+                      function(x)
+                        chabaudi_si_clean(
+                          parameters_cr = c(x[1], x[2], x[3], x[4]), 
+                          parameters = parameters_tsukushi, 
+                          time_range = time_range, 
+                          cue = "G", 
+                          cue_range = G_range, 
+                          log_cue = "log10",
+                          immunity = "tsukushi",
+                          solver = "vode"),
+                      lower = c(-1, -100, -1000, -5000), # range determined that would alter shape of spline
+                      upper = c(1, 100, 1000, 5000),  
+                      popSize = 250, 
+                      maxiter = 1000, # change to 10 for testing purpose 
+                      pmutation = 0.3,
+                      keepBest = TRUE,
+                      run = 50,
+                      parallel = cl,
+                      seed = 137,
+                      monitor = TRUE,
+                      id = "2022-03-24_si-G-log-emp")
-0.3990724 -1.815569 845.101 -1016.89[[1]]
           [,1]      [,2]    [,3]     [,4]
[1,] -0.3990724 -1.815569 845.101 -1016.89

[[2]]
[1] 4.286641

GA | iter = 1 | Mean = 1.575592 | Best = 4.286641
-0.3990724 -1.815569 845.101 -1016.89[[1]]
           [,1]      [,2]    [,3]     [,4]
[1,] -0.3990724 -1.815569 845.101 -1016.89

[[2]]
[1] 4.286641

GA | iter = 2 | Mean = 2.465818 | Best = 4.286641
-0.4837053 45.37822 449.7956 -261.9455[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.4837053 45.37822 449.7956 -261.9455

[[2]]
[1] 4.393653

GA | iter = 3 | Mean = 3.183676 | Best = 4.393653
-0.4837053 45.37822 449.7956 -261.9455[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.4837053 45.37822 449.7956 -261.9455

[[2]]
[1] 4.393653

GA | iter = 4 | Mean = 3.515954 | Best = 4.393653
-0.4431536 43.71615 557.1593 -284.625[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.4431536 43.71615 557.1593 -284.625

[[2]]
[1] 4.417805

GA | iter = 5 | Mean = 3.392856 | Best = 4.417805
-0.4431536 43.71615 557.1593 -284.625[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.4431536 43.71615 557.1593 -284.625

[[2]]
[1] 4.417805

GA | iter = 6 | Mean = 3.527498 | Best = 4.417805
-0.4758988 41.81809 570.62 -266.6557[[1]]
           [,1]     [,2]   [,3]      [,4]
[1,] -0.4758988 41.81809 570.62 -266.6557

[[2]]
[1] 4.458293

GA | iter = 7 | Mean = 3.511350 | Best = 4.458293
-0.4758988 41.81809 570.62 -266.6557[[1]]
           [,1]     [,2]   [,3]      [,4]
[1,] -0.4758988 41.81809 570.62 -266.6557

[[2]]
[1] 4.458293

GA | iter = 8 | Mean = 3.601068 | Best = 4.458293
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 9 | Mean = 3.545637 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 10 | Mean = 3.576595 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 11 | Mean = 3.635431 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 12 | Mean = 3.616007 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 13 | Mean = 3.558791 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 14 | Mean = 3.551373 | Best = 4.825082
-0.5191793 6.43941 716.836 -308.1435[[1]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[2]]
[1] 4.825082

GA | iter = 15 | Mean = 3.634593 | Best = 4.825082
-0.5521305 -3.393666 542.2133 -233.0698[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5521305 -3.393666 542.2133 -233.0698

[[2]]
[1] 4.895077

GA | iter = 16 | Mean = 3.599445 | Best = 4.895077
-0.5521305 -3.393666 542.2133 -233.0698[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5521305 -3.393666 542.2133 -233.0698

[[2]]
[1] 4.895077

GA | iter = 17 | Mean = 3.612762 | Best = 4.895077
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 18 | Mean = 3.628313 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 19 | Mean = 3.500845 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 20 | Mean = 3.648602 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 21 | Mean = 3.544285 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 22 | Mean = 3.502125 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 23 | Mean = 3.502566 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 24 | Mean = 3.548277 | Best = 4.904870
-0.6014859 14.68765 511.6358 -233.0552[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[2]]
[1] 4.90487

GA | iter = 25 | Mean = 3.578269 | Best = 4.904870
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 26 | Mean = 3.721362 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 27 | Mean = 3.619467 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 28 | Mean = 3.521789 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 29 | Mean = 3.574118 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 30 | Mean = 3.708397 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 31 | Mean = 3.735054 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 32 | Mean = 3.658512 | Best = 4.964534
-0.5382961 -33.77918 689.1789 -278.9378[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[2]]
[1] 4.964534

GA | iter = 33 | Mean = 3.644646 | Best = 4.964534
-0.6959973 74.51578 512.6334 -243.6193[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6959973 74.51578 512.6334 -243.6193

[[2]]
[1] 5.039717

GA | iter = 34 | Mean = 3.779446 | Best = 5.039717
-0.6959973 74.51578 512.6334 -243.6193[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6959973 74.51578 512.6334 -243.6193

[[2]]
[1] 5.039717

GA | iter = 35 | Mean = 3.726940 | Best = 5.039717
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 36 | Mean = 3.463581 | Best = 5.132611
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 37 | Mean = 3.598757 | Best = 5.132611
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 38 | Mean = 3.617474 | Best = 5.132611
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 39 | Mean = 3.782722 | Best = 5.132611
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 40 | Mean = 3.756017 | Best = 5.132611
-0.5349855 -29.00439 508.0676 -210.2494[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[2]]
[1] 5.132611

GA | iter = 41 | Mean = 3.819630 | Best = 5.132611
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 42 | Mean = 3.860551 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 43 | Mean = 3.781827 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 44 | Mean = 3.888499 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 45 | Mean = 3.849545 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 46 | Mean = 3.893940 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 47 | Mean = 3.852963 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 48 | Mean = 3.981539 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 49 | Mean = 3.935625 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 50 | Mean = 3.953155 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 51 | Mean = 3.920828 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 52 | Mean = 3.801624 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 53 | Mean = 4.028639 | Best = 5.219879
-0.5883465 -78.87639 550.3713 -209.334[[1]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[2]]
[1] 5.219879

GA | iter = 54 | Mean = 3.994082 | Best = 5.219879
-0.5476306 -30.26734 526.8626 -222.5533[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[2]]
[1] 5.246824

GA | iter = 55 | Mean = 4.048357 | Best = 5.246824
-0.5476306 -30.26734 526.8626 -222.5533[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[2]]
[1] 5.246824

GA | iter = 56 | Mean = 3.774608 | Best = 5.246824
-0.5476306 -30.26734 526.8626 -222.5533[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[2]]
[1] 5.246824

GA | iter = 57 | Mean = 3.961367 | Best = 5.246824
-0.5476306 -30.26734 526.8626 -222.5533[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[2]]
[1] 5.246824

GA | iter = 58 | Mean = 3.871422 | Best = 5.246824
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 59 | Mean = 3.764530 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 60 | Mean = 3.912392 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 61 | Mean = 3.929180 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 62 | Mean = 3.856513 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 63 | Mean = 3.847810 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 64 | Mean = 3.630315 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 65 | Mean = 3.925402 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 66 | Mean = 3.803357 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 67 | Mean = 3.878848 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 68 | Mean = 3.769794 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 69 | Mean = 3.843635 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 70 | Mean = 3.794277 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 71 | Mean = 3.766561 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 72 | Mean = 3.783341 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 73 | Mean = 3.684336 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 74 | Mean = 3.662768 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 75 | Mean = 3.797026 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 76 | Mean = 3.747629 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 77 | Mean = 3.774180 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 78 | Mean = 3.848304 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 79 | Mean = 3.713013 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 80 | Mean = 3.947482 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 81 | Mean = 3.711542 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 82 | Mean = 3.685945 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 83 | Mean = 3.812003 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 84 | Mean = 3.796222 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 85 | Mean = 3.818186 | Best = 5.333751
-0.6441537 -27.06522 590.1003 -253.6506[[1]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[2]]
[1] 5.333751

GA | iter = 86 | Mean = 3.720000 | Best = 5.333751
-0.5508519 -31.8827 531.3849 -223.7984[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[2]]
[1] 5.354659

GA | iter = 87 | Mean = 3.816393 | Best = 5.354659
-0.5508519 -31.8827 531.3849 -223.7984[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[2]]
[1] 5.354659

GA | iter = 88 | Mean = 3.737441 | Best = 5.354659
-0.5508519 -31.8827 531.3849 -223.7984[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[2]]
[1] 5.354659

GA | iter = 89 | Mean = 3.799466 | Best = 5.354659
-0.5508519 -31.8827 531.3849 -223.7984[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[2]]
[1] 5.354659

GA | iter = 90 | Mean = 3.687662 | Best = 5.354659
-0.5508519 -31.8827 531.3849 -223.7984[[1]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[2]]
[1] 5.354659

GA | iter = 91 | Mean = 3.730351 | Best = 5.354659
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 92 | Mean = 3.772834 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 93 | Mean = 3.687365 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 94 | Mean = 3.826906 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 95 | Mean = 3.820015 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 96 | Mean = 3.667093 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 97 | Mean = 3.665287 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 98 | Mean = 3.815837 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 99 | Mean = 3.876284 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 100 | Mean = 3.867490 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 101 | Mean = 3.616339 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 102 | Mean = 3.645385 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 103 | Mean = 3.769547 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 104 | Mean = 3.759397 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 105 | Mean = 3.828971 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 106 | Mean = 3.786233 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 107 | Mean = 3.725155 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 108 | Mean = 3.831318 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 109 | Mean = 3.680703 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 110 | Mean = 3.799834 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 111 | Mean = 3.819010 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 112 | Mean = 3.819800 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 113 | Mean = 3.852211 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 114 | Mean = 3.875596 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 115 | Mean = 3.897936 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 116 | Mean = 3.766343 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 117 | Mean = 3.813981 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 118 | Mean = 3.826598 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 119 | Mean = 3.792597 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 120 | Mean = 3.828313 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 121 | Mean = 3.757428 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 122 | Mean = 3.644819 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 123 | Mean = 3.716562 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 124 | Mean = 3.607168 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 125 | Mean = 3.590910 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 126 | Mean = 3.745089 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 127 | Mean = 3.735851 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 128 | Mean = 3.632961 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 129 | Mean = 3.834580 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 130 | Mean = 3.717088 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 131 | Mean = 3.717069 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 132 | Mean = 3.819511 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 133 | Mean = 3.715374 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 134 | Mean = 3.677009 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 135 | Mean = 3.711569 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 136 | Mean = 3.675780 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 137 | Mean = 3.735836 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 138 | Mean = 3.835807 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 139 | Mean = 3.901531 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 140 | Mean = 3.908663 | Best = 5.485641
-0.6989177 -25.2271 556.3986 -258.464[[1]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[2]]
[1] 5.485641

GA | iter = 141 | Mean = 3.886215 | Best = 5.485641

> stopCluster(cl)
> 
> print(list(ga_res@bestSol, ga_res@fitnessValue))
[[1]]
[[1]][[1]]
           [,1]      [,2]    [,3]     [,4]
[1,] -0.3990724 -1.815569 845.101 -1016.89

[[1]][[2]]
           [,1]      [,2]    [,3]     [,4]
[1,] -0.3990724 -1.815569 845.101 -1016.89

[[1]][[3]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.4837053 45.37822 449.7956 -261.9455

[[1]][[4]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.4837053 45.37822 449.7956 -261.9455

[[1]][[5]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.4431536 43.71615 557.1593 -284.625

[[1]][[6]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.4431536 43.71615 557.1593 -284.625

[[1]][[7]]
           [,1]     [,2]   [,3]      [,4]
[1,] -0.4758988 41.81809 570.62 -266.6557

[[1]][[8]]
           [,1]     [,2]   [,3]      [,4]
[1,] -0.4758988 41.81809 570.62 -266.6557

[[1]][[9]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[10]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[11]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[12]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[13]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[14]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[15]]
           [,1]    [,2]    [,3]      [,4]
[1,] -0.5191793 6.43941 716.836 -308.1435

[[1]][[16]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5521305 -3.393666 542.2133 -233.0698

[[1]][[17]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5521305 -3.393666 542.2133 -233.0698

[[1]][[18]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[19]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[20]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[21]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[22]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[23]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[24]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[25]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6014859 14.68765 511.6358 -233.0552

[[1]][[26]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[27]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[28]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[29]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[30]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[31]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[32]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[33]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5382961 -33.77918 689.1789 -278.9378

[[1]][[34]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6959973 74.51578 512.6334 -243.6193

[[1]][[35]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.6959973 74.51578 512.6334 -243.6193

[[1]][[36]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[37]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[38]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[39]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[40]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[41]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5349855 -29.00439 508.0676 -210.2494

[[1]][[42]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[43]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[44]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[45]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[46]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[47]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[48]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[49]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[50]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[51]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[52]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[53]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[54]]
           [,1]      [,2]     [,3]     [,4]
[1,] -0.5883465 -78.87639 550.3713 -209.334

[[1]][[55]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[1]][[56]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[1]][[57]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[1]][[58]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.5476306 -30.26734 526.8626 -222.5533

[[1]][[59]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[60]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[61]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[62]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[63]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[64]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[65]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[66]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[67]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[68]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[69]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[70]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[71]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[72]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[73]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[74]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[75]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[76]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[77]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[78]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[79]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[80]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[81]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[82]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[83]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[84]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[85]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[86]]
           [,1]      [,2]     [,3]      [,4]
[1,] -0.6441537 -27.06522 590.1003 -253.6506

[[1]][[87]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[1]][[88]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[1]][[89]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[1]][[90]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[1]][[91]]
           [,1]     [,2]     [,3]      [,4]
[1,] -0.5508519 -31.8827 531.3849 -223.7984

[[1]][[92]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[93]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[94]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[95]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[96]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[97]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[98]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[99]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[100]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[101]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[102]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[103]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[104]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[105]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[106]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[107]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[108]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[109]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[110]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[111]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[112]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[113]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[114]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[115]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[116]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[117]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[118]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[119]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[120]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[121]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[122]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[123]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[124]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[125]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[126]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[127]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[128]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[129]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[130]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[131]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[132]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[133]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[134]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[135]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[136]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[137]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[138]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[139]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[140]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464

[[1]][[141]]
           [,1]     [,2]     [,3]     [,4]
[1,] -0.6989177 -25.2271 556.3986 -258.464


[[2]]
[1] 5.485641

> 
> 
> 
