
Lmod is automatically replacing "intel/2020.1.217" with "gcc/9.3.0".


Due to MODULEPATH changes, the following have been reloaded:
  1) openmpi/4.0.3


R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R script to submit parallelized genetic algorithm optimzied runs.
> 
> # load libraries
> library(doParallel)
Loading required package: foreach
Loading required package: iterators
Loading required package: parallel
> library(GA)
Package 'GA' version 3.2.2
Type 'citation("GA")' for citing this R package in publications.

Attaching package: ‘GA’

The following object is masked from ‘package:utils’:

    de

> library(here)
here() starts at /scratch/wanglu57/job_scripts
> library(doRNG)
Loading required package: rngtools
> 
> source(here::here("ga_verbose.R"), local = T)
> source(here::here("chabaudi_si_clean.R"), local = T)
> # load function
> #-----------------------------#
> # load in parameters
> #-----------------------------#
> parameters_tsukushi <- c(R1 = 8.89*10^6, # slightly higher
+                          lambda = 3.7*10^5,
+                          mu = 0.025, 
+                          p = 8*10^-6, # doubled form original
+                          alpha = 1, 
+                          alphag = 2, 
+                          beta = 5.721, 
+                          mum = 48, 
+                          mug = 4, 
+                          I0 = 43.85965, 
+                          Ig0 = 0, 
+                          a = 150, 
+                          b = 100, 
+                          sp = 1,
+                          psin = 16.69234,
+                          psiw = 0.8431785,
+                          phin = 0.03520591, 
+                          phiw = 550.842,
+                          iota = 2.18*(10^6),
+                          rho = 0.2627156)
> 
> time_range <- seq(0, 20, by = 1e-3)
> 
> I_range <- seq(0, log10(10^8), by = log10(10^8)/5000)
> 
> #-----------------------------#
> # Begin parallelized code
> #----------------------------#
> 
> 
> # Create an array from the NODESLIST environnement variable
> nodeslist = unlist(strsplit(Sys.getenv("NODESLIST"), split=" "))
> 
> # Create the cluster with the nodes name. One process per count of node name.
> # nodeslist = node1 node1 node2 node2, means we are starting 2 processes on node1, likewise on node2.
> cl = makeCluster(nodeslist, type = "PSOCK") 
> registerDoParallel(cl)
> clusterExport(cl,c("ga_verbose", "time_range", "parameters_tsukushi", "I_range", "chabaudi_si_clean")) 
> clusterCall(cl, library, package = "mclust", character.only = TRUE)
[[1]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[2]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[3]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[4]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[5]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[6]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[7]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[8]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[9]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[10]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[11]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[12]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[13]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[14]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[15]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[16]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[17]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[18]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[19]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[20]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[21]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[22]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[23]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[24]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[25]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[26]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[27]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[28]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[29]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[30]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[31]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[32]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[33]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[34]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[35]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[36]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[37]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[38]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[39]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[40]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[41]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[42]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[43]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[44]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[45]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[46]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[47]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

[[48]]
[1] "mclust"    "stats"     "graphics"  "grDevices" "utils"     "datasets" 
[7] "methods"   "base"     

> ga_res <- ga_verbose(type = "real-valued", 
+                      function(x)
+                        chabaudi_si_clean(
+                          parameters_cr = c(x[1], x[2], x[3], x[4]), 
+                          parameters = parameters_tsukushi, 
+                          time_range = time_range, 
+                          cue = "I", 
+                          cue_range = I_range, 
+                          log_cue = "log10",
+                          immunity = "tsukushi",
+                          solver = "vode"),
+                      lower = c(-5, -100, -500, -1000), # range determined that would alter shape of spline
+                      upper = c(5,100,500, 1000),  
+                      popSize = 250, 
+                      maxiter = 1000, # change to 10 for testing purpose 
+                      pmutation = 0.3,
+                      keepBest = TRUE,
+                      run =50,
+                      parallel = cl,
+                      seed = 137,
+                      monitor = TRUE,
+                      id = "2022-02-22_ga-si-I-log")
0.5588249 -48.55132 264.828 -769.3579[[1]]
          [,1]      [,2]    [,3]      [,4]
[1,] 0.5588249 -48.55132 264.828 -769.3579

[[2]]
[1] 2.919218

GA | iter = 1 | Mean = 0.2920912 | Best = 2.9192175
0.5588249 -48.55132 264.828 -769.3579[[1]]
          [,1]      [,2]    [,3]      [,4]
[1,] 0.5588249 -48.55132 264.828 -769.3579

[[2]]
[1] 2.919218

GA | iter = 2 | Mean = 0.4474273 | Best = 2.9192175
-2.722318 80.07332 67.02114 -499.7247[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -2.722318 80.07332 67.02114 -499.7247

[[2]]
[1] 3.031205

GA | iter = 3 | Mean = 0.6666696 | Best = 3.0312046
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 4 | Mean = 0.9342179 | Best = 3.9041004
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 5 | Mean = 1.194134 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 6 | Mean = 1.287165 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 7 | Mean = 1.437714 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 8 | Mean = 1.579389 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 9 | Mean = 1.579159 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 10 | Mean = 1.548551 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 11 | Mean = 1.558513 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 12 | Mean = 1.60755 | Best = 3.90410
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 13 | Mean = 1.573275 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 14 | Mean = 1.569971 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 15 | Mean = 1.559942 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 16 | Mean = 1.625709 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 17 | Mean = 1.712873 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 18 | Mean = 1.694809 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 19 | Mean = 1.615028 | Best = 3.904100
-1.925671 94.39379 42.34674 -424.1439[[1]]
          [,1]     [,2]     [,3]      [,4]
[1,] -1.925671 94.39379 42.34674 -424.1439

[[2]]
[1] 3.9041

GA | iter = 20 | Mean = 1.56936 | Best = 3.90410
-1.45108 -6.921383 61.74214 -170.2578[[1]]
         [,1]      [,2]     [,3]      [,4]
[1,] -1.45108 -6.921383 61.74214 -170.2578

[[2]]
[1] 3.976049

GA | iter = 21 | Mean = 1.686587 | Best = 3.976049
-1.45108 -6.921383 61.74214 -170.2578[[1]]
         [,1]      [,2]     [,3]      [,4]
[1,] -1.45108 -6.921383 61.74214 -170.2578

[[2]]
[1] 3.976049

GA | iter = 22 | Mean = 1.614203 | Best = 3.976049
-1.45108 -6.921383 61.74214 -170.2578[[1]]
         [,1]      [,2]     [,3]      [,4]
[1,] -1.45108 -6.921383 61.74214 -170.2578

[[2]]
[1] 3.976049

GA | iter = 23 | Mean = 1.699866 | Best = 3.976049
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 24 | Mean = 1.839515 | Best = 4.214548
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 25 | Mean = 1.746138 | Best = 4.214548
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 26 | Mean = 1.773029 | Best = 4.214548
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 27 | Mean = 1.844197 | Best = 4.214548
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 28 | Mean = 1.830708 | Best = 4.214548
1.534658 85.93396 46.4765 -361.4606[[1]]
         [,1]     [,2]    [,3]      [,4]
[1,] 1.534658 85.93396 46.4765 -361.4606

[[2]]
[1] 4.214548

GA | iter = 29 | Mean = 1.906613 | Best = 4.214548
1.522635 79.7739 69.82985 -413.6276[[1]]
         [,1]    [,2]     [,3]      [,4]
[1,] 1.522635 79.7739 69.82985 -413.6276

[[2]]
[1] 4.225427

GA | iter = 30 | Mean = 1.969079 | Best = 4.225427
1.522635 79.7739 69.82985 -413.6276[[1]]
         [,1]    [,2]     [,3]      [,4]
[1,] 1.522635 79.7739 69.82985 -413.6276

[[2]]
[1] 4.225427

GA | iter = 31 | Mean = 2.050480 | Best = 4.225427
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 32 | Mean = 2.032644 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 33 | Mean = 2.089179 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 34 | Mean = 2.080421 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 35 | Mean = 2.144297 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 36 | Mean = 2.046169 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 37 | Mean = 2.074848 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 38 | Mean = 2.113924 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 39 | Mean = 2.218298 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 40 | Mean = 2.391222 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 41 | Mean = 2.461327 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 42 | Mean = 2.461474 | Best = 4.542645
-2.804308 -9.539919 62.88002 -147.3929[[1]]
          [,1]      [,2]     [,3]      [,4]
[1,] -2.804308 -9.539919 62.88002 -147.3929

[[2]]
[1] 4.542645

GA | iter = 43 | Mean = 2.483783 | Best = 4.542645
1.339085 78.15239 41.96581 -397.4873[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.339085 78.15239 41.96581 -397.4873

[[2]]
[1] 5.018801

GA | iter = 44 | Mean = 2.504744 | Best = 5.018801
1.339085 78.15239 41.96581 -397.4873[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.339085 78.15239 41.96581 -397.4873

[[2]]
[1] 5.018801

GA | iter = 45 | Mean = 2.590236 | Best = 5.018801
1.339085 78.15239 41.96581 -397.4873[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.339085 78.15239 41.96581 -397.4873

[[2]]
[1] 5.018801

GA | iter = 46 | Mean = 2.479101 | Best = 5.018801
1.265353 76.28206 68.52284 -519.5887[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.265353 76.28206 68.52284 -519.5887

[[2]]
[1] 5.037821

GA | iter = 47 | Mean = 2.644804 | Best = 5.037821
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 48 | Mean = 2.630525 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 49 | Mean = 2.629723 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 50 | Mean = 2.591030 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 51 | Mean = 2.685750 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 52 | Mean = 2.792856 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 53 | Mean = 2.955668 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 54 | Mean = 2.898404 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 55 | Mean = 3.156346 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 56 | Mean = 2.743707 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 57 | Mean = 2.836647 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 58 | Mean = 2.754087 | Best = 5.128602
1.382341 74.63646 67.12673 -507.2564[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.382341 74.63646 67.12673 -507.2564

[[2]]
[1] 5.128602

GA | iter = 59 | Mean = 2.721093 | Best = 5.128602
1.36923 74.79015 67.6127 -511.8778[[1]]
        [,1]     [,2]    [,3]      [,4]
[1,] 1.36923 74.79015 67.6127 -511.8778

[[2]]
[1] 5.132936

GA | iter = 60 | Mean = 2.891393 | Best = 5.132936
1.364828 73.36011 59.64815 -481.7912[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.364828 73.36011 59.64815 -481.7912

[[2]]
[1] 5.187804

GA | iter = 61 | Mean = 3.081721 | Best = 5.187804
1.364828 73.36011 59.64815 -481.7912[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.364828 73.36011 59.64815 -481.7912

[[2]]
[1] 5.187804

GA | iter = 62 | Mean = 2.949196 | Best = 5.187804
1.364828 73.36011 59.64815 -481.7912[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.364828 73.36011 59.64815 -481.7912

[[2]]
[1] 5.187804

GA | iter = 63 | Mean = 2.936600 | Best = 5.187804
1.383766 79.2701 55.82784 -468.2272[[1]]
         [,1]    [,2]     [,3]      [,4]
[1,] 1.383766 79.2701 55.82784 -468.2272

[[2]]
[1] 5.24638

GA | iter = 64 | Mean = 3.022222 | Best = 5.246380
1.383766 79.2701 55.82784 -468.2272[[1]]
         [,1]    [,2]     [,3]      [,4]
[1,] 1.383766 79.2701 55.82784 -468.2272

[[2]]
[1] 5.24638

GA | iter = 65 | Mean = 2.994123 | Best = 5.246380
1.383766 79.2701 55.82784 -468.2272[[1]]
         [,1]    [,2]     [,3]      [,4]
[1,] 1.383766 79.2701 55.82784 -468.2272

[[2]]
[1] 5.24638

GA | iter = 66 | Mean = 2.815898 | Best = 5.246380
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 67 | Mean = 2.973314 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 68 | Mean = 2.877106 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 69 | Mean = 2.944186 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 70 | Mean = 2.939028 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 71 | Mean = 2.969309 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 72 | Mean = 3.131219 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 73 | Mean = 3.018869 | Best = 5.267769
1.299435 72.85812 60.56692 -481.8257[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.299435 72.85812 60.56692 -481.8257

[[2]]
[1] 5.267769

GA | iter = 74 | Mean = 2.943579 | Best = 5.267769
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 75 | Mean = 3.000053 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 76 | Mean = 3.080137 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 77 | Mean = 3.029058 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 78 | Mean = 3.179487 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 79 | Mean = 3.000022 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 80 | Mean = 3.026878 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 81 | Mean = 2.969937 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 82 | Mean = 3.083260 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 83 | Mean = 2.896027 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 84 | Mean = 3.005956 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 85 | Mean = 2.895168 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 86 | Mean = 2.913217 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 87 | Mean = 2.959083 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 88 | Mean = 3.054384 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 89 | Mean = 3.024951 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 90 | Mean = 2.923812 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 91 | Mean = 2.919323 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 92 | Mean = 3.100324 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 93 | Mean = 3.088055 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 94 | Mean = 3.102553 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 95 | Mean = 2.957040 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 96 | Mean = 2.887654 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 97 | Mean = 2.864473 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 98 | Mean = 3.173198 | Best = 5.340344
1.314371 93.04857 60.68775 -486.0014[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.314371 93.04857 60.68775 -486.0014

[[2]]
[1] 5.340344

GA | iter = 99 | Mean = 3.084676 | Best = 5.340344
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 100 | Mean = 3.218235 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 101 | Mean = 3.055599 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 102 | Mean = 2.819527 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 103 | Mean = 2.777993 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 104 | Mean = 2.810940 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 105 | Mean = 2.780292 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 106 | Mean = 3.126926 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 107 | Mean = 2.912285 | Best = 5.350175
1.366359 92.60662 60.96685 -486.2317[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.366359 92.60662 60.96685 -486.2317

[[2]]
[1] 5.350175

GA | iter = 108 | Mean = 2.852444 | Best = 5.350175
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 109 | Mean = 2.881811 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 110 | Mean = 2.850606 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 111 | Mean = 2.888356 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 112 | Mean = 2.852134 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 113 | Mean = 2.943949 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 114 | Mean = 3.075169 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 115 | Mean = 2.956590 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 116 | Mean = 2.883233 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 117 | Mean = 2.767095 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 118 | Mean = 3.017821 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 119 | Mean = 3.027355 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 120 | Mean = 3.025273 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 121 | Mean = 2.979568 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 122 | Mean = 2.975441 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 123 | Mean = 2.868746 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 124 | Mean = 3.077976 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 125 | Mean = 2.988971 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 126 | Mean = 3.116369 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 127 | Mean = 3.060576 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 128 | Mean = 3.051413 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 129 | Mean = 3.223921 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 130 | Mean = 3.269384 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 131 | Mean = 3.143015 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 132 | Mean = 3.139761 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 133 | Mean = 3.275945 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 134 | Mean = 3.134279 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 135 | Mean = 2.973788 | Best = 5.384403
1.437849 84.79688 31.08743 -389.2612[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.437849 84.79688 31.08743 -389.2612

[[2]]
[1] 5.384403

GA | iter = 136 | Mean = 3.091557 | Best = 5.384403
1.410138 84.10422 46.76541 -459.3489[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.410138 84.10422 46.76541 -459.3489

[[2]]
[1] 5.390457

GA | iter = 137 | Mean = 3.045987 | Best = 5.390457
1.410138 84.10422 46.76541 -459.3489[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.410138 84.10422 46.76541 -459.3489

[[2]]
[1] 5.390457

GA | iter = 138 | Mean = 3.016062 | Best = 5.390457
1.410138 84.10422 46.76541 -459.3489[[1]]
         [,1]     [,2]     [,3]      [,4]
[1,] 1.410138 84.10422 46.76541 -459.3489

[[2]]
[1] 5.390457

GA | iter = 139 | Mean = 3.161490 | Best = 5.390457
slurmstepd: error: *** JOB 27678596 ON cdr2291 CANCELLED AT 2022-02-24T14:21:10 DUE TO TIME LIMIT ***
